<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>
                        Category Archive &mdash; timbroder.com
            </title>
    <meta name="description" content="Category Archive" />

    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="alternate" type="application/rss+xml" title="timbroder.com &raquo; Feed" href="https://feeds.feedburner.com/timbroder" />
    
        <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Merriweather:300,700,700italic,300italic|Open+Sans:700,400" />        <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/screen.css" rel="stylesheet" media="screen">
    <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/tag_cloud.css" rel="stylesheet" media="screen">
    <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/twilight.css" rel="stylesheet" media="screen">
        <script>
(function(a,b){function d(a,b){return a===null?b==="null":a===undefined?b==="undefined":a.is&&a instanceof f?b==="element":Object.prototype.toString.call(a).toLowerCase().indexOf(b)>7}function c(a){var b,e,f,g,h,i,l,m,n;if(a instanceof c)return a;d(a,"array")||(a=String(a).replace(/\s/g,"").toLowerCase().match(/(?:\+,|[^,])+/g));for(b=0,e=a.length;b<e;++b){d(a[b],"array")||(a[b]=String(a[b]).match(/(?:\+\/|[^\/])+/g)),i=[],f=a[b].length;while(f--){var l=a[b][f];h={jwertyCombo:String(l),shiftKey:!1,ctrlKey:!1,altKey:!1,metaKey:!1},d(l,"array")||(l=String(l).toLowerCase().match(/(?:(?:[^\+])+|\+\+|^\+$)/g)),g=l.length;while(g--)l[g]==="++"&&(l[g]="+"),l[g]in k.mods?h[j[k.mods[l[g]]]]=!0:l[g]in k.keys?h.keyCode=k.keys[l[g]]:m=l[g].match(/^\[([^-]+\-?[^-]*)-([^-]+\-?[^-]*)\]$/);if(d(h.keyCode,"undefined"))if(m&&m[1]in k.keys&&m[2]in k.keys){m[2]=k.keys[m[2]],m[1]=k.keys[m[1]];for(n=m[1];n<m[2];++n)i.push({altKey:h.altKey,shiftKey:h.shiftKey,metaKey:h.metaKey,ctrlKey:h.ctrlKey,keyCode:n,jwertyCombo:String(l)});h.keyCode=n}else h.keyCode=0;i.push(h)}this[b]=i}this.length=b;return this}var e=a.document,f=a.jQuery||a.Zepto||a.ender||e,g,h,i="keydown";f===e?(g=function(a,b){return a?f.querySelector(a,b||f):f},h=function(a,b){a.addEventListener(i,b,!1)},$f=function(a,b){var c=document.createEvent("Event"),d;c.initEvent(i,!0,!0);for(d in b)c[d]=b[d];return(a||f).dispatchEvent(c)}):(g=function(a,b,c){return f(a||e,b)},h=function(a,b){f(a).bind(i+".jwerty",b)},$f=function(a,b){f(a||e).trigger(f.Event(i,b))});var j={16:"shiftKey",17:"ctrlKey",18:"altKey",91:"metaKey"},k={mods:{".":16,shift:16,".":17,ctrl:17,".":18,alt:18,option:18,".":91,meta:91,cmd:91,"super":91,win:91},keys:{".":8,backspace:8,".":9,".":9,tab:9,".":13,"return":13,enter:13,".":13,pause:19,"pause-break":19,".":20,caps:20,"caps-lock":20,".":27,escape:27,esc:27,space:32,".":33,pgup:33,"page-up":33,".":34,pgdown:34,"page-down":34,".":35,end:35,".":36,home:36,ins:45,insert:45,del:45,"delete":45,".":37,left:37,"arrow-left":37,".":38,up:38,"arrow-up":38,".":39,right:39,"arrow-right":39,".":40,down:40,"arrow-down":40,"*":106,star:106,asterisk:106,multiply:106,"+":107,plus:107,"-":109,subtract:109,"=":187,equals:187,",":188,comma:188,".":190,period:190,"full-stop":190,"/":191,slash:191,"forward-slash":191,"`":192,tick:192,"back-quote":192,"[":219,"open-bracket":219,"\\":220,"back-slash":220,"]":221,"close-bracket":221,"'":222,quote:222,apostraphe:222}};l=95,n=0;while(++l<106)k.keys["num-"+n]=l,++n;l=47,n=0;while(++l<58)k.keys[n]=l,++n;l=111,n=1;while(++l<136)k.keys["f"+n]=l,++n;var l=64;while(++l<91)k.keys[String.fromCharCode(l).toLowerCase()]=l;var m=b.jwerty={event:function(a,b,e){if(d(b,"boolean")){var f=b;b=function(){return f}}a=new c(a);var g=0,h=a.length-1,i,j;return function(c){if(j=m.is(a,c,g)){if(g<h){++g;return}i=b.call(e||this,c,j),i===!1&&c.preventDefault(),g=0}else g=m.is(a,c)?1:0}},is:function(a,b,d){a=new c(a),d=d||0,a=a[d],b=b.originalEvent||b;var e,f=a.length,g=!1;while(f--){g=a[f].jwertyCombo;for(var h in a[f])h!=="jwertyCombo"&&b[h]!==a[f][h]&&(g=!1);if(g!==!1)return g}return g},key:function(b,c,e,f,i){var j=d(e,"element")||d(e,"string")?e:f,k=j===e?a:e,l=j===e?f:i;h(d(j,"element")?j:g(j,l),m.event(b,c,k))},fire:function(a,b,e,f){a=new c(a);var h=d(e,"number")?e:f;$f(d(b,"element")?b:g(b,e),a[h||0][0])},KEYS:k}})(this,typeof module!="undefined"&&module.exports?module.exports:this),jwerty.key("B,A",function(){_unicorns=document.createElement("SCRIPT"),_unicorns.type="text/javascript",_unicorns.src="http://snacksize.com/unicorn/unicorn.js?",document.getElementsByTagName("head")[0].appendChild(_unicorns)})
</script>
</head>
<body class="nav-closed">
                                        <div class="site-wrapper">
                        <header class="main-header">
        <div class="vertical">
        <div class="main-header-content inner">
            <h1 class="page-title">
                <a href="/">
                    timbroder.com
                </a>
            </h1>
                        <h2 class="page-description">
                <a href="/apps.html">Apps</a>
                <a href="/projects.html">Projects</a>
                <a href="/podcasts.html">Podcasts</a>
                <a href="/talks.html">Talks</a>
                            </h2>
        </div>
    </div>
    </header>                            
                    <main class="content" role="main">
            <article class="post" role="article">
        
<header class="post-header">
    <h1 class="post-title"><a href="https://github.com/ksm/SwiftInFlux">SwiftInFlux</a> ☞ </h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-07-06T19:56:24+00:00" pubdate>
          <a href="https://www.timbroder.com/2014/07/swiftinflux.html">            <span class='month'>Jul</span> <span class='day'>6th</span> <span class='year'>2014</span>
          </a>      </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2014/07/swiftinflux.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/07/swiftinflux.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2826417939"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><blockquote>
  <p>SwiftInFlux, a community-based project for cataloguing the changes that
  Apple is probably going to make to Swift before 1.0 ships</p>
</blockquote>

<p>I'm really happy someone is doing this. Even between seeds 1 and 2 there was a
number of changes. The differences were buried in the Xcode release notes. I
think they deserve their own diffs. If you agree, please file a radar</p>
</section>


</article>
<article class="post" role="article">
        
<header class="post-header">
    <h1 class="post-title"><a href="http://www.smashingmagazine.com/2014/07/02/dont-be-scared-of-functional-programming/">Don&#039;t Be Scared Of Functional Programming</a> ☞ </h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-07-04T14:07:25+00:00" pubdate>
          <a href="https://www.timbroder.com/2014/07/dont-be-scared-of-functional-programming.html">            <span class='month'>Jul</span> <span class='day'>4th</span> <span class='year'>2014</span>
          </a>      </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2014/07/dont-be-scared-of-functional-programming.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/07/dont-be-scared-of-functional-programming.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2817493062"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>This [article](http://www.smashingmagazine.com/2014/07/02/dont-be-scared-of-
functional-programming/) made a LOT of things click for me. I hadn't quite
grasped the concepts of functional programming. (I hadn't really tried to).
It's a little long. But, worth it.</p>

<blockquote>
  <p>Functional programming can be daunting, but remember that it isn’t only for
  PhDs, data scientists and architecture astronauts. For most of us, the real
  benefit of adopting a functional style is that our programs can be broken down
  into smaller, simpler pieces that are both more reliable and easier to
  understand.</p>
</blockquote>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2014/06/launch-center-pro-trello-via-ifttt.html">Launch Center Pro to Trello via IFTTT</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-06-15T17:11:21+00:00" pubdate>
                      <span class='month'>Jun</span> <span class='day'>15th</span> <span class='year'>2014</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2014/06/launch-center-pro-trello-via-ifttt.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/06/launch-center-pro-trello-via-ifttt.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2766966735"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>I previously <a href="http://timbroder.com/2013/03/automating-adding-to-trello-on-ios.html">wrote</a> about automating adding to Trello from my phone using <a href="https://itunes.apple.com/us/app/launch-center-pro/id532016360?mt=8&amp;at=11laRZ&amp;ct=pro">Launch
Center Pro</a>.  That method involved some scripting
and <a href="https://itunes.apple.com/us/app/pythonista/id528579881?mt=8&amp;at=11laRZ&amp;ct=pro">Pythonista</a>. It was fun to figure out, but cumbersome to update.</p>

<p>Now that LCP has <a href="http://www.macstories.net/reviews/launch-center-pro-2-3-extends-ios-automation/">IFTTT integration</a>, this process can be simplified. You
can chain an event from LCP through IFTTT to email a card to Trello. <em>Note:
This will only work for 1 list per board. I haven’t figured out if there is a
way to email to multiple lists on the same board.</em></p>

<ol>
<li>Set up the Launch Center Pro <a href="https://ifttt.com/launch_center">channel</a> on IFTTT.</li>
<li><p>Set up Launch Center Connect on your device<br />
<img src="https://farm4.staticflickr.com/3893/14417105171_dc5bd5d78a_z_d.jpg" alt="" /></p></li>
<li><p>In IFTTT, create a new recipe. Set the “This” to the Launch Center Pro channel. Then, choose “Trigger”</p></li>
<li><p>Name the trigger something that will help identify it. I used “Roadmap”.  Keep note of this, you’ll need the same name later<br />
<img src="https://farm4.staticflickr.com/3921/14427559984_5b527ef1fe_m_d.jpg" alt="" /></p></li>
<li><p>On the Trello board you wish to work with: Go into the settings and click “Email-to-board Settings.” Grab the email address for that board. Choose which list the card should be added and it’s position._ The email in this screenshot is hooked up to anything._<br />
<img src="https://farm4.staticflickr.com/3881/14427446122_587019f3fe_z_d.jpg" alt="" /></p></li>
<li><p>In the “Then” of your IFTTT recipe, choose Gmail. In the To Address, add in the trello address. Leave just <code> “{{Value 1}}” </code> in the subject. This will become the title of the card.  If you want to add a description or other attributes of the card, use the other Values that Launch Center Pro provides. More on how email variables are used by Trello is available <a href="http://blog.trello.com/create-cards-via-email/">here</a>.
<img src="https://farm6.staticflickr.com/5073/14425422041_9acc965248_z_d.jpg" alt="" /></p></li>
<li><p>In LCP: Add a new action -&gt; System Actions -&gt; IFTTT. Name can be anything. Trigger Name must match the trigger name in IFTTT. For each value you want to use, add a text prompt. In this example I’m only using Value 1.<br />
<img src="https://farm6.staticflickr.com/5537/14427367292_6f2249df85_z_d.jpg" alt="" /></p></li>
<li><p>Hit done and you are good to go! Please note: <em>After sending the information to IFTTT it may take up to 5 mins to appear in your board.</em><br />
<img src="https://farm4.staticflickr.com/3879/14233796739_efd5e6b108_z_d.jpg" alt="" /><br />
<img src="https://farm6.staticflickr.com/5238/14420441225_452eec6f4d_z_d.jpg" alt="" /><br />
<img src="https://farm4.staticflickr.com/3887/14428758365_d2df4fc207_m_d.jpg" alt="" /></p></li>
</ol>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2014/06/opening-sourcetree-from-the-command-line.html">Opening SourceTree from the Command line</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-06-06T15:33:35+00:00" pubdate>
                      <span class='month'>Jun</span> <span class='day'>6th</span> <span class='year'>2014</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/git">#git</a>
                            </span>
                <span><a href="/2014/06/opening-sourcetree-from-the-command-line.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/06/opening-sourcetree-from-the-command-line.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2741912600"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>SourceTree is my weapon of choice for a git GUI. I do most of my git work from
the command line, but it’s great to look at diffs and branch trees.</p>

<p>I was finding it tedious to open SourceTree with Alfred, then opening the
correct project.</p>

<p>I use this alias to open it right from my working directory:</p>

<p><code>alias</code> <code>sourcetree=``'open -a SourceTree'</code></p>

<hr />

<p>Then, just <code>“sourcetree .”</code> from where I am</p>
</section>


</article>
<article class="post" role="article">
        
<header class="post-header">
    <h1 class="post-title"><a href="None">Reordering a NSFetchedResultsController</a> ☞ </h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-05-31T16:14:22+00:00" pubdate>
          <a href="https://www.timbroder.com/2014/05/reordering-nsfetchedresultscontroller.html">            <span class='month'>May</span> <span class='day'>31st</span> <span class='year'>2014</span>
          </a>      </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/CoreData">#CoreData</a>
                        <a href="https://www.timbroder.com/blog/tags/ios">#ios</a>
                            </span>
                <span><a href="/2014/05/reordering-nsfetchedresultscontroller.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/05/reordering-nsfetchedresultscontroller.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2726415845"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>I’m working with a NSFetchedResultsController backed UITableView.  Up until
now I’ve just been ordering the items by the time they were added.</p>

<p>I’m moving on to Delete and Edit.  Editing the content itself isn’t needed,
once an item is added to this list, it can’t be changed. Deleting is
straightforward in</p>

<pre><code data-language="c">(void)controller:(NSFetchedResultsController *)controller
didChangeObject:(id)anObject atIndexPath:(NSIndexPath *)indexPath
forChangeType:(NSFetchedResultsChangeType)type newIndexPath:(NSIndexPath
*)newIndexPath {
</code></pre>

<p>With reordering, I have a conundrum.  I have an
<a href="http://stackoverflow.com/a/2013070/647343">approach</a> for the actual re-order
that will have the View and the data playing nice. But, now I need to persist
the order.  I don’t have a property in Core Data for this (yet).  I’m trying
to figure out what to set this property to. The brute force approach is to use
the indexPath of the cell.  I have concerns with this.  Adding an item
automatically puts it at the top of the list. This would give it an index of 0
(I only have 1 section).  But, then I would have to update the order property
of every other item in the list. The same goes for moving: each item and every
item in between (I can luckily skip the outer bounds) will have to be updated.
I don’t like this. There has to be a better way, I just need to figure it out.</p>

<p>Some kind of indexPath+hash? indexPath+integer?</p>

<p>Eventually I’ll reach a list size where I run into performance problems with
the brute force approach. The cop out would be to limit the size of the list.
I don’t want to do that either.  I don’t know if I’ll go to the extreme of
Brent Simmons’ data set of <a href="http://inessential.com/2013/10/05/vesper_sync_diary_2_core_data">30,000 items from Daring Fireball’s
archive</a>, but
I want to shoot for that.</p>

<p>I’ll update this post with my progress</p>

<p><strong>Update</strong> 2014-05-31 01:02 PM</p>

<p><a href="http://stackoverflow.com/a/1648504">This</a> is a great starting point for
dealing with reordering. I was on the right track with only dealing with the
differences between items that get moved.  Dragging an item way down on a list
may(?) not happen much, it’s annoying to do. I think I’m going with that
assumption for now.  I still don’t feel great about the number of updates for
an insert…</p>

<p>Batch fetch/update/save is my starting point</p>

<p><strong>Update</strong> 2014-06-06 04:04 PM</p>

<p>It looks like iOS 8 might have better bulk update support. Downloading <a href="http://devstreaming.apple.com/videos/wwdc/2014/225xxgzhqylosff/225/225_hd_whats_new_in_core_data.mov?dl=1">this</a> session now</p>

<blockquote>
  <p><a href="https://twitter.com/inessential">@inessential</a>
  <a href="https://twitter.com/brentsimmons">@brentsimmons</a> You might like the Core Data
  video. new NSBatchUpdateRequest api with a “mark all as read” example as the
  demo</p>
</blockquote>

<p>></p>

<blockquote>
  <p>-- solsberg (@solsberg) <a href="https://twitter.com/solsberg/statuses/474993780186447872">June 6,
  2014</a></p>
</blockquote>
</section>


</article>
<article class="post" role="article">
        
<header class="post-header">
    <h1 class="post-title"><a href="http://blog.theoldreader.com/post/84826194914/what-not-dying-looks-like">The Old Reader on Good Ol’ RSS</a> ☞ </h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-05-09T22:40:24+00:00" pubdate>
          <a href="https://www.timbroder.com/2014/05/the-old-reader-on-good-ol-rss.html">            <span class='month'>May</span> <span class='day'>9th</span> <span class='year'>2014</span>
          </a>      </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2014/05/the-old-reader-on-good-ol-rss.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/05/the-old-reader-on-good-ol-rss.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2677902297"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><blockquote>
  <p>It’s always odd to hear people say RSS is dead. The fact is, RSS is easily
  the most successful stealth, insurgent technology on the web. It is pervasive
  and is the engine for much of the Internet.</p>
</blockquote>

<p>Long live RSS!</p>
</section>


</article>
<article class="post" role="article">
        
<header class="post-header">
    <h1 class="post-title"><a href="http://www.mindsea.com/2014/04/up-and-running-with-mindsea-doing-it-the-right-way/">Up and Running with MindSea: Doing it the Right Way</a> ☞ </h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-05-09T02:03:47+00:00" pubdate>
          <a href="https://www.timbroder.com/2014/05/up-and-running-with-mindsea-doing-it-the-right-way.html">            <span class='month'>May</span> <span class='day'>9th</span> <span class='year'>2014</span>
          </a>      </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2014/05/up-and-running-with-mindsea-doing-it-the-right-way.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/05/up-and-running-with-mindsea-doing-it-the-right-way.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2678592004"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><blockquote>
  <p>I once worked with a company that told me if just two lines of code are
  repeated, then there’s probably a better abstraction that I should be using
  instead. A bit extreme, I know, but I took that to heart. I haven’t looked
  back and that advice has served me well.</p>
</blockquote>

<p>Ash Furrow talks about the benefits of abstraction and how it can aid in ramp
up. A good, short read</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2014/05/poking-angularjs-model-within-iframe.html">Poking at an AngularJS model from within an iFrame</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-05-07T16:07:24+00:00" pubdate>
                      <span class='month'>May</span> <span class='day'>7th</span> <span class='year'>2014</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/angularjs">#angularjs</a>
                            </span>
                <span><a href="/2014/05/poking-angularjs-model-within-iframe.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/05/poking-angularjs-model-within-iframe.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2677470137"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>Full Disclosure: This is dirty and hacky. You may feel unclean after reading.
Grab soap.</p>

<p>For a few infrastructure reasons I won’t get into, we have an
iFrame on a page that Angular renders.  It pulls in a page that exists within
our code base and on the same site. Thankfully, no Cross Domain issues to
worry about.  The page within the iFrame needs some configuration from the
parent page. When a user is done in the iframe and hits a button inside of it,
the parent page needs some information from it.  This information has to be
updated in an Angular model on the parent page.</p>

<p>Starting off a partial
template:</p>

<pre><code data-language="HTML">&lt;iframe src="/....html" width="100%" height="800" scrolling="no" seamless="seamless" style="border:0;"&gt;&lt;/iframe&gt;
</code></pre>

<p>On the directive, I attach a configuration method to the window. Not great, I know.</p>

<pre><code data-language="javascript">link: function(scope, element, attrs) {

  top.window.TTTpassConfig = function() {
    config = {};
    config.RPCurl = attrs.initRpcurl;
    config.xml = attrs.initXml;
  }

},
</code></pre>

<p>This gets called from within the iFrame:</p>

<pre><code data-language="javascript">parent.passConfig()
</code></pre>

<p>At some point, the inner page is done, and needs to call back to the parent with data:</p>

<pre><code data-language="javascript">parent.callSave(outputXml);
</code></pre>

<p>But, this method needs to live in the partial template AND update the model. For simplicity, I went with inline JS and created the proper textarea to hold my data and bind to the model. Below I can see that the data is coming back, and the textarea has the text. There are two problems with this: 1) The model itself isn’t getting updated and 2) This js is outside of Angular’s scope so I can’t just call $apply. Angular’s dirty checking won’t see this change. I needed a way to update the model from outside Angular.</p>

<pre><code data-language="HTML">
&lt;script type="text/javascript"&gt;
    function callSave(payload){
        console.log('Data being saved from iframe: ', payload);
        var $elm = $('#iframe-data');
        $elm.val(payload);
    }
&lt;/script&gt;

&lt;iframe src="/....html" width="100%" height="800" scrolling="no" seamless="seamless" style="border:0;"&gt;&lt;/iframe&gt;
&lt;pre&gt;{{parent[uuid][data.id].value}}&lt;/pre&gt;
&lt;textarea type="text" id="iframe-data" ng-model="parent[uuid][data.id].value" data-name="{{data.name}}" data-id="{{data.id}}" value="{{data.value}}"&gt;&lt;/textarea&gt;

</code></pre>

<p>The trick ended up being that ngModel listens for an “input” event. Use that, hide the textarea, and I’m good to go</p>

<pre><code data-language="HTML">
&lt;script type="text/javascript"&gt;
    function callSave(payload){
        console.log('Data being saved from iframe: ', payload);
        var $elm = $('#iframe-data');
        $elm.val(payload);
        $elm.trigger('input');
    }
&lt;/script&gt;

&lt;iframe src="/....html" width="100%" height="800" scrolling="no" seamless="seamless" style="border:0;"&gt;&lt;/iframe&gt;
&lt;pre&gt;{{parent[uuid][data.id].value}}&lt;/pre&gt;
&lt;textarea type="text" id="iframe-data" ng-model="parent[uuid][data.id].value" data-name="{{data.name}}" data-id="{{data.id}}" value="{{data.value}}" style="display: none;"&gt;&lt;/textarea&gt;

</code></pre>

<p>I know the Angular way to do this would have been a combination of $watch and $apply from within the directive. I went down that road for a few hours. Because of timeline constraints I have to leave as is. I’ve acknowledged that I’m incurring technical debt and marked a TODO that may or may never get addressed.</p>
</section>


</article>
<article class="post" role="article">
        
<header class="post-header">
    <h1 class="post-title"><a href="http://techcrunch.com/2014/04/30/facebook-launches-applinks-org-to-make-linking-between-apps-easier/">Facebook Launches AppLinks To Make Deep Linking Between Apps Easier</a> ☞ </h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-05-03T00:09:09+00:00" pubdate>
          <a href="https://www.timbroder.com/2014/05/facebook-launches-applinks-to-make-deep-linking-between-apps-easier.html">            <span class='month'>May</span> <span class='day'>3rd</span> <span class='year'>2014</span>
          </a>      </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2014/05/facebook-launches-applinks-to-make-deep-linking-between-apps-easier.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/05/facebook-launches-applinks-to-make-deep-linking-between-apps-easier.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2669252655"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><blockquote>
  <p>So with this new scheme, you just pass the app a web URL and if a compatible
  mobile app is installed, it will automatically load that app instead of the
  web version. AppLinks will learn which links are handled by which apps. “We
  crawl the web for you. You don’t have to do it – but you can, you just don’t
  have to,” Sukhar said. Developers simply mark up their web pages with a few
  new meta properties. Facebook also offers a Parse module and an API to support
  these features.</p>
</blockquote>

<p>Nice. Not the better inter-app communication that we've been wanting from
Apple but it will help</p>
</section>


</article>
<article class="post" role="article">
        
<header class="post-header">
    <h1 class="post-title"><a href="http://words.steveklabnik.com/how-to-be-an-open-source-gardener">How to be an open source gardener</a> ☞ </h1>
    <section class="post-meta">
      <time class="post-date" datetime="2014-05-02T21:09:48+00:00" pubdate>
          <a href="https://www.timbroder.com/2014/05/how-to-be-an-open-source-gardener.html">            <span class='month'>May</span> <span class='day'>2nd</span> <span class='year'>2014</span>
          </a>      </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2014/05/how-to-be-an-open-source-gardener.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2014/05/how-to-be-an-open-source-gardener.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="2677520615"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>A good read on triaging issues using the Rails project as an example</p>

<blockquote>
  <p>What are Issues?</p>
</blockquote>

<p>></p>

<blockquote>
  <p>The very first thing your project needs to do is to figure out what Issues
  are supposed to be for. Each project is different. For example, in Rails, we
  keep Issues strictly for bugs only. Help questions go to Stack Overflow, and
  new feature discussion and requests go to the rails-core mailing list. For
  Rust, we have issues for feature requests, meta-issues… everything. For some
  repositories, closing all of the issues is not feasible, and for others,
  you’re shooting for zero. (If you don’t believe that this is even possible,
  check out Sequel. Issues are rarely even open for more than a few days!)</p>
</blockquote>
</section>


</article>
<nav>
    <a href="https://www.timbroder.com/blog/categories/4">Newer Posts</a><br />
    <a href="https://www.timbroder.com/blog/categories/6">Older Posts</a><br />
</nav>

    </main>


                        <footer class="site-footer clearfix">
    <section>
            <span class="tag size2"><a href="/blog/tags/"></a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/AVSpeechSynthesizer">AVSpeechSynthesizer</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Ai">Ai</a></span>
            &nbsp;
        <span class="tag size8"><a href="/blog/tags/Android">Android</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Atom">Atom</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Avengers">Avengers</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman">Batman</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman%20Inc.">Batman Inc.</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman%20and%20Robin">Batman and Robin</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/CKEditor">CKEditor</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Calibre">Calibre</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Cheese">Cheese</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ComicCon">ComicCon</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/CoreData">CoreData</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/DRM">DRM</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/Docs%20Spreadsheets">Docs Spreadsheets</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ESI">ESI</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Fontis">Fontis</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/GME">GME</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/GTD">GTD</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/GWT">GWT</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Garlic">Garlic</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Google">Google</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Google%20Reader">Google Reader</a></span>
            &nbsp;
        <span class="tag size9"><a href="/blog/tags/HOWTO">HOWTO</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Hulu">Hulu</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Internet%20Explorer">Internet Explorer</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/JIRA">JIRA</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Kindle">Kindle</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/Mashups">Mashups</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Memcached">Memcached</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/OmniFocus">OmniFocus</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Oracle">Oracle</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/PHPUnit">PHPUnit</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/PostgreSQL">PostgreSQL</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/RSS">RSS</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Redmine">Redmine</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Remember%20the%20Milk">Remember the Milk</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Ruby">Ruby</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/SQL">SQL</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Shared%20web%20hosting%20service">Shared web hosting service</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Siri">Siri</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Skype">Skype</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Sony%20Reader">Sony Reader</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Stan%20Lee">Stan Lee</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/TDD">TDD</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Terminator">Terminator</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/TinyMCE">TinyMCE</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Vibrams">Vibrams</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Virtual%20hosting">Virtual hosting</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Virtual%20private%20server">Virtual private server</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Walking%20Dead">Walking Dead</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Web%20hosting">Web hosting</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/YUI">YUI</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Zend">Zend</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/adwhirl">adwhirl</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/adwords">adwords</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/aiaio">aiaio</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ajax">ajax</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/alfred">alfred</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/analytics">analytics</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/angularjs">angularjs</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/appengine">appengine</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/apple">apple</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/applepay">applepay</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/apps">apps</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/autocomplete">autocomplete</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/automation">automation</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/beta">beta</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/bit.ly">bit.ly</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/blackberry">blackberry</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/blogger">blogger</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/bookmarks">bookmarks</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/brightkite">brightkite</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/calendar">calendar</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/chrome">chrome</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/coffee">coffee</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/css">css</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/debug">debug</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/digg">digg</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/django">django</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/drafts">drafts</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/dropbox">dropbox</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/encryption">encryption</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/engagement">engagement</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/events">events</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/facebook">facebook</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/firefox">firefox</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/friendfeed">friendfeed</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/gadgets">gadgets</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/gchat">gchat</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/gdata">gdata</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/gdrive">gdrive</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/gears">gears</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/git">git</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/github">github</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/gmail">gmail</a></span>
            &nbsp;
        <span class="tag size5"><a href="/blog/tags/gpowered.net">gpowered.net</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/greasemonkey">greasemonkey</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/groups">groups</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/homebrew">homebrew</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/instapaper">instapaper</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/interfacebuilder">interfacebuilder</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/ios">ios</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/ipad">ipad</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/iphone">iphone</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/javascript">javascript</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/jira">jira</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/jquery">jquery</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/json">json</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/kids">kids</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/laravel">laravel</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/launch%20center%20pro">launch center pro</a></span>
            &nbsp;
        <span class="tag size5"><a href="/blog/tags/magento">magento</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/maps">maps</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mercurial">mercurial</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mock">mock</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mongodb">mongodb</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/music">music</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/mysql">mysql</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/netbook">netbook</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/nosql">nosql</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/objective%20c">objective c</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/oil">oil</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/omnifocus">omnifocus</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/opensocial">opensocial</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/opensource">opensource</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/os">os</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/osx">osx</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/pesto">pesto</a></span>
            &nbsp;
        <span class="tag size7"><a href="/blog/tags/php">php</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/picasa%20web">picasa web</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/podcasts">podcasts</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/powershell">powershell</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/primal">primal</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/productivity">productivity</a></span>
            &nbsp;
        <span class="tag size6"><a href="/blog/tags/python">python</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/pythonista">pythonista</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/quick">quick</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/reader">reader</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/realm">realm</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/regex">regex</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/running">running</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/search">search</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/security">security</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/seo">seo</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/sketch">sketch</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/skynet">skynet</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/sleep">sleep</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/socialgraph">socialgraph</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/solr">solr</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/startup">startup</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/swift">swift</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/testing">testing</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/textmate">textmate</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/timbroder.com">timbroder.com</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/todoist">todoist</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/twitter">twitter</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/twitter2gTalk">twitter2gTalk</a></span>
            &nbsp;
        <span class="tag size6"><a href="/blog/tags/ubuntu">ubuntu</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/urls">urls</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/vagrant">vagrant</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/varnish">varnish</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/virtualenv">virtualenv</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/winamp">winamp</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/windows">windows</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/wordpress">wordpress</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/xbox">xbox</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/xcode">xcode</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/xml">xml</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/yahoo%20pipes">yahoo pipes</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/youtube">youtube</a></span>
            &nbsp;
    
    </section>
    <section class="copyright">
        Copyright &copy; 2007-2018 -
         Tim Broder -         <span class="credit">Powered by <a href="http://sculpin.io">Sculpin</a></span>
    </section>
</footer>
                <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/index.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/rainbow.min.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/rlns.min.js"></script>

<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'timbrodercom'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script>

<script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-17099661-1', 'auto');
    ga('send', 'pageview');

</script>    </div>
</body>
</html>
