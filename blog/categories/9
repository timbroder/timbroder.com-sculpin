<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>
                        Category Archive &mdash; timbroder.com
            </title>
    <meta name="description" content="Category Archive" />

    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="alternate" type="application/rss+xml" title="timbroder.com &raquo; Feed" href="https://feeds.feedburner.com/timbroder" />
    
        <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Merriweather:300,700,700italic,300italic|Open+Sans:700,400" />        <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/screen.css" rel="stylesheet" media="screen">
    <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/tag_cloud.css" rel="stylesheet" media="screen">
    <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/twilight.css" rel="stylesheet" media="screen">
        <script>
(function(a,b){function d(a,b){return a===null?b==="null":a===undefined?b==="undefined":a.is&&a instanceof f?b==="element":Object.prototype.toString.call(a).toLowerCase().indexOf(b)>7}function c(a){var b,e,f,g,h,i,l,m,n;if(a instanceof c)return a;d(a,"array")||(a=String(a).replace(/\s/g,"").toLowerCase().match(/(?:\+,|[^,])+/g));for(b=0,e=a.length;b<e;++b){d(a[b],"array")||(a[b]=String(a[b]).match(/(?:\+\/|[^\/])+/g)),i=[],f=a[b].length;while(f--){var l=a[b][f];h={jwertyCombo:String(l),shiftKey:!1,ctrlKey:!1,altKey:!1,metaKey:!1},d(l,"array")||(l=String(l).toLowerCase().match(/(?:(?:[^\+])+|\+\+|^\+$)/g)),g=l.length;while(g--)l[g]==="++"&&(l[g]="+"),l[g]in k.mods?h[j[k.mods[l[g]]]]=!0:l[g]in k.keys?h.keyCode=k.keys[l[g]]:m=l[g].match(/^\[([^-]+\-?[^-]*)-([^-]+\-?[^-]*)\]$/);if(d(h.keyCode,"undefined"))if(m&&m[1]in k.keys&&m[2]in k.keys){m[2]=k.keys[m[2]],m[1]=k.keys[m[1]];for(n=m[1];n<m[2];++n)i.push({altKey:h.altKey,shiftKey:h.shiftKey,metaKey:h.metaKey,ctrlKey:h.ctrlKey,keyCode:n,jwertyCombo:String(l)});h.keyCode=n}else h.keyCode=0;i.push(h)}this[b]=i}this.length=b;return this}var e=a.document,f=a.jQuery||a.Zepto||a.ender||e,g,h,i="keydown";f===e?(g=function(a,b){return a?f.querySelector(a,b||f):f},h=function(a,b){a.addEventListener(i,b,!1)},$f=function(a,b){var c=document.createEvent("Event"),d;c.initEvent(i,!0,!0);for(d in b)c[d]=b[d];return(a||f).dispatchEvent(c)}):(g=function(a,b,c){return f(a||e,b)},h=function(a,b){f(a).bind(i+".jwerty",b)},$f=function(a,b){f(a||e).trigger(f.Event(i,b))});var j={16:"shiftKey",17:"ctrlKey",18:"altKey",91:"metaKey"},k={mods:{".":16,shift:16,".":17,ctrl:17,".":18,alt:18,option:18,".":91,meta:91,cmd:91,"super":91,win:91},keys:{".":8,backspace:8,".":9,".":9,tab:9,".":13,"return":13,enter:13,".":13,pause:19,"pause-break":19,".":20,caps:20,"caps-lock":20,".":27,escape:27,esc:27,space:32,".":33,pgup:33,"page-up":33,".":34,pgdown:34,"page-down":34,".":35,end:35,".":36,home:36,ins:45,insert:45,del:45,"delete":45,".":37,left:37,"arrow-left":37,".":38,up:38,"arrow-up":38,".":39,right:39,"arrow-right":39,".":40,down:40,"arrow-down":40,"*":106,star:106,asterisk:106,multiply:106,"+":107,plus:107,"-":109,subtract:109,"=":187,equals:187,",":188,comma:188,".":190,period:190,"full-stop":190,"/":191,slash:191,"forward-slash":191,"`":192,tick:192,"back-quote":192,"[":219,"open-bracket":219,"\\":220,"back-slash":220,"]":221,"close-bracket":221,"'":222,quote:222,apostraphe:222}};l=95,n=0;while(++l<106)k.keys["num-"+n]=l,++n;l=47,n=0;while(++l<58)k.keys[n]=l,++n;l=111,n=1;while(++l<136)k.keys["f"+n]=l,++n;var l=64;while(++l<91)k.keys[String.fromCharCode(l).toLowerCase()]=l;var m=b.jwerty={event:function(a,b,e){if(d(b,"boolean")){var f=b;b=function(){return f}}a=new c(a);var g=0,h=a.length-1,i,j;return function(c){if(j=m.is(a,c,g)){if(g<h){++g;return}i=b.call(e||this,c,j),i===!1&&c.preventDefault(),g=0}else g=m.is(a,c)?1:0}},is:function(a,b,d){a=new c(a),d=d||0,a=a[d],b=b.originalEvent||b;var e,f=a.length,g=!1;while(f--){g=a[f].jwertyCombo;for(var h in a[f])h!=="jwertyCombo"&&b[h]!==a[f][h]&&(g=!1);if(g!==!1)return g}return g},key:function(b,c,e,f,i){var j=d(e,"element")||d(e,"string")?e:f,k=j===e?a:e,l=j===e?f:i;h(d(j,"element")?j:g(j,l),m.event(b,c,k))},fire:function(a,b,e,f){a=new c(a);var h=d(e,"number")?e:f;$f(d(b,"element")?b:g(b,e),a[h||0][0])},KEYS:k}})(this,typeof module!="undefined"&&module.exports?module.exports:this),jwerty.key("B,A",function(){_unicorns=document.createElement("SCRIPT"),_unicorns.type="text/javascript",_unicorns.src="http://snacksize.com/unicorn/unicorn.js?",document.getElementsByTagName("head")[0].appendChild(_unicorns)})
</script>
</head>
<body class="nav-closed">
                                        <div class="site-wrapper">
                        <header class="main-header">
        <div class="vertical">
        <div class="main-header-content inner">
            <h1 class="page-title">
                <a href="/">
                    timbroder.com
                </a>
            </h1>
                        <h2 class="page-description">
                <a href="/apps.html">Apps</a>
                <a href="/projects.html">Projects</a>
                <a href="/podcasts.html">Podcasts</a>
                <a href="/talks.html">Talks</a>
                            </h2>
        </div>
    </div>
    </header>                            
                    <main class="content" role="main">
            <article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2013/10/garageband-for-ios-7-to-become-free-with-in-app-purchases-as-apple-reveals-full-set-of-new-ilife-and-iwork-icons-mac-rumors.html">GarageBand for iOS 7 to Become Free with In-App Purchases as Apple Reveals Full Set of New iLife and iWork Icons - Mac Rumors</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2013-10-21T15:01:03+00:00" pubdate>
                      <span class='month'>Oct</span> <span class='day'>21st</span> <span class='year'>2013</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2013/10/garageband-for-ios-7-to-become-free-with-in-app-purchases-as-apple-reveals-full-set-of-new-ilife-and-iwork-icons-mac-rumors.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2013/10/garageband-for-ios-7-to-become-free-with-in-app-purchases-as-apple-reveals-full-set-of-new-ilife-and-iwork-icons-mac-rumors.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="1887535161"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>With all the discussion around pricing the past few weeks, it's very
interesting that Apple is using a IAP model in one of it's apps</p>

<p><a href="http://www.macrumors.com/2013/10/20/garageband-for-ios-to-become-free-with-in-app-purchases-as-apple-reveals-full-set-of-new-ilife-and-iwork-icons/?utm_content=bufferfe593&amp;utm_source=buffer&amp;utm_medium=twitter&amp;utm_campaign=Buffer">GarageBand for iOS 7 to Become Free with In-App Purchases as Apple Reveals Full Set of New iLife and iWork Icons - Mac Rumors</a>:</p>

<blockquote>
  <p>Aside from the new icons, the updated page also reveals in a footnote
  that GarageBand will become a free basic download for all iOS 7 devices,
  joining the other five iLife and iWork apps that became free alongside the
  release of iOS 7.</p>
  
  <p>GarageBand will, however, include in-app purchase content from Apple, with
  additional instruments and sounds available for a fee. Licensing fees
  associated with some of those sounds had been the presumed reason why
  GarageBand was left out the original move to make Apple's iLife and iWork apps
  for iOS free of charge, and it appears that the company has settled on in-app
  purchases as a way around this issue, offering basic functionality for free
  and then premium content through the paid upgrade options.</p>
</blockquote>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2013/10/inessential-com-why-care-about-30000-notes.html">inessential.com: Why Care About 30,000 Notes?</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2013-10-20T15:14:45+00:00" pubdate>
                      <span class='month'>Oct</span> <span class='day'>20th</span> <span class='year'>2013</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2013/10/inessential-com-why-care-about-30000-notes.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2013/10/inessential-com-why-care-about-30000-notes.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="1879242876"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>Brent Simmons posts some interesting philosophy on sample data sizes. I'm
definitely going to be using this thinking in my next app</p>

<blockquote>
  <p>I’ve learned that I’m unlikely to over-estimate the amount of data people like
  to keep.</p>
</blockquote>

<p>via <a href="http://inessential.com/2013/10/05/why_care_about_30_000_notes_">inessential.com: Why Care About 30,000
Notes?</a>.</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2013/10/gamasutra-david-framptons-blog-postmortem-the-blockheads.html">Gamasutra: David Framptons Blog - Postmortem: The Blockheads</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2013-10-17T21:50:50+00:00" pubdate>
                      <span class='month'>Oct</span> <span class='day'>17th</span> <span class='year'>2013</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2013/10/gamasutra-david-framptons-blog-postmortem-the-blockheads.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2013/10/gamasutra-david-framptons-blog-postmortem-the-blockheads.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="1869322137"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>The Blockheads is an extremely popular (and profitable) game. David Frampton
does a great Post Mortem write up of what went right and wrong:</p>

<p>The Blockheads is an exploration/mining/crafting massive world sandbox game
released for iOS in January 2013 and only just launched for Android. To date
it has had over 7 million downloads on iOS, and has a passionate and growing
fan-base, rarely dipping below 100,000 daily active users since its launch 9
months ago. The Blockheads was entirely made by one guy - me, over the course
of about a year, and since version 1.0 Ive released 4 major updates. Its an
ever-evolving game, and the potential additions are limitless. Perhaps in part
due to this constant evolution, I havent felt I could write a postmortem until
now. It still feels a long way from "complete", but I think now with the
release of the 1.4 update it finally no longer feels "incomplete". So its time
to share some of the story of its development, and where I feel I went right
and wrong with The Blockheads.</p>

<p>via <a href="http://www.gamasutra.com/blogs/DavidFrampton/20131012/202246/Postmortem_The_Blockheads.php">Gamasutra: David Framptons Blog - Postmortem: The Blockheads</a>.</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2013/05/fixing-youtube-embeds-in-wordpress.html">Fixing YouTube embeds in Wordpress</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2013-05-10T16:42:32+00:00" pubdate>
                      <span class='month'>May</span> <span class='day'>10th</span> <span class='year'>2013</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/php">#php</a>
                        <a href="https://www.timbroder.com/blog/tags/wordpress">#wordpress</a>
                        <a href="https://www.timbroder.com/blog/tags/youtube">#youtube</a>
                            </span>
                <span><a href="/2013/05/fixing-youtube-embeds-in-wordpress.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2013/05/fixing-youtube-embeds-in-wordpress.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="1285289556"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>In some wordpress themes, youtube embeds just show up as a black screen. As
discussed <a href="http://wordpress.org/support/topic/dynamically-change-youtube-iframe-embeds-to-auto-add-transparent-mode?replies=8">here</a>, the solution is
adding a transparency setting to the iframe's src.</p>

<p>However, the solution in
that thread only works if the src is right next to the frameborder. Updated
code below if you are running into this problem</p>

<pre><code data-language="PHP">function add_video_wmode_transparent( $html ) {
    $pattern = '#(src=&amp;quot;https?://www.youtube(?:-nocookie)?.com/(?:v|embed)/([a-zA-Z0-9-]+).&amp;quot;)#';
    preg_match_all( $pattern, $html, $matches );

    if ( count( $matches ) &amp;gt; 0) {
        foreach ( $matches[0] as $orig_src ) {
            if ( !strstr($orig_src, 'wmode=transparent' ) &amp;amp;&amp;amp; !strstr( $orig_src, 'hd=1' ) ) {
                $add = 'hd=1&amp;amp;wmode=transparent&amp;quot;';

                if ( !strstr($orig_src, '?') ) {
                    $add = '?' . $add;
                }
                $new_src = substr( $orig_src, 0, -1 ) . $add;
                $html = str_replace( $orig_src, $new_src, $html );
            }
        }
    }
    return $html;
}
add_filter( 'the_content', 'add_video_wmode_transparent', 10 );
</code></pre>

<p>New thread in the wordpress forums can be found
<a href="htp://wordpress.org/support/topic/dynamically-change-youtube-iframe-embeds-to-auto-add-transparent-mode-updated">here</a>. (The original was closed)</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2013/03/automating-adding-to-trello-on-ios.html">Automate Adding to Trello on iOS with Launch Center Pro and Pythonista</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2013-03-23T17:38:14+00:00" pubdate>
                      <span class='month'>Mar</span> <span class='day'>23rd</span> <span class='year'>2013</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/ios">#ios</a>
                        <a href="https://www.timbroder.com/blog/tags/launch%20center%20pro">#launch center pro</a>
                        <a href="https://www.timbroder.com/blog/tags/python">#python</a>
                        <a href="https://www.timbroder.com/blog/tags/pythonista">#pythonista</a>
                            </span>
                <span><a href="/2013/03/automating-adding-to-trello-on-ios.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2013/03/automating-adding-to-trello-on-ios.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="1159541645"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>I love using <a href="https://trello.com/">Trello </a>to organize my life and work. While
I kind of like it's iOS app, sometimes navigating to a board to add a card can
be a little time consuming.  I want this process to be faster. I also use
Launch Center Pro to get some quick actions that I miss from Android. Mostly
around quick communication, adding events, and now, adding to Trello.  LCP
uses x-callback-urls for inter-app communication, but Trello doesn't have any
that I could see. Inspired by Federico
<a href="https://twitter.com/viticci">Viticci</a>'s article on <a href="http://www.macstories.net/stories/automating-ios-how-pythonista-changed-my-workflow/">automating his iOS
workflow</a>, I decided to take a crack at it using pythonista. All
code shown below can be found on
<a href="https://github.com/broderboy/PythonistaTrello">GitHub</a>.</p>

<p><a href="http://timbroder.com/2013/03/automating-adding-to-trello-with-launch-center-pro-and-pythonista.html/2013-02-11-14-32-57"><img src="/images/2013/02/2013-02-11-14.32.57.png" alt="2013-02-1114.32.57" /></a></p>

<p><a href="http://timbroder.com/2013/03/automating-adding-to-trello-with-launch-center-pro-and-pythonista.html/2013-02-11-14-33-00"><img src="/images/2013/03/LCP.png" alt="2013-02-11
14.33.00" /></a></p>

<p><a href="http://omz-software.com/pythonista/">Pythonista</a> lets you edit and run python scripts on your phone.
There are a few ways to get scripts onto your device:</p>

<ul>
<li>Edit right in the app</li>
<li>Import <a href="https://gist.github.com/omz/b0644f5ed1d94bd32805">from a gist</a></li>
<li>Use <a href="http://tapbots.com/software/pastebot/">pastebot</a>. A great app that gives you multiple clipboards on your device that will also sync with your mac. This is my preferred method.</li>
</ul>

<p>The endgame of all this: I want to be able to add a card to a specific board,
with as few taps as possible. Check out this video for what we are going to
build.  Digging into the <a href="https://trello.com/docs/api/card/index.html#post-1-cards">Trello
API</a>, we can see
that to add a card, we'll need a name for the card and the ID of the list to
add it to. We also see that we'll need a token for any of the API calls. To
get all of our lists, we'll also need to know about all of our boards.  This
breaks our tasks out as follows:</p>

<ol>
<li>Get an App API Key</li>
<li>Get an API Token</li>
<li>Get a list of every board we heve</li>
<li>Get the IDs of every list on each of these boards</li>
<li>Add a new card to our list of choice</li>
</ol>

<p>To get an App API Key, you can generate one <a href="https://trello.com/1/appKey/generate" title="here">here</a>.  In theory, the one I distribute with
these scripts should be ok. Get this first script into Pythonista and run it.
It will generate a permanant API token for you that you can leave in Launch
Center Pro when running these scripts.</p>

<pre><code data-language="python">#GetTrelloToken

import webbrowser

url = 'https://trello.com/1/authorize?key=3e2cd730f3dcccbe15eaf0d39d219a37&amp;amp;name=PythonistaTrello&amp;amp;expiration=never&amp;amp;response_type=token&amp;amp;scope=read,write'

#open web browser to get a permanant Trello API Token
webbrowser.open(url)
</code></pre>

<p><a href="http://timbroder.com/2013/03/automating-adding-to-trello-with-launch-center-pro-and-pythonista.html/2013-02-11-14-54-35"><img src="/images/2013/02/2013-02-11-14.54.35.png" alt="2013-02-11 14.54.35" /></a></p>

<p><a href="http://timbroder.com/2013/03/automating-adding-to-trello-with-launch-center-pro-and-pythonista.html/2013-02-11-14-54-40"> <img src="/images/2013/02/2013-02-11-14.54.40.png" alt="2013-02-1114.54.40" /></a></p>

<p>Now that we have our key and tokens,
let's get get all of our boards and the lists on each one. Run this script and
pass in your token and your email address as arguments. (In pythonista hold
down run to get the "Run with arguments dialog"). Add your arguments separated
by spaces. For me, this could look something like: <code>"EGYlyiOdggDOaPoTUxaTQobmS6gtiX timothy.broder@gmail.com"</code></p>

<pre><code data-language="python">#List all lists by user

import urllib2
import urllib
import json
import sys

if len(sys.argv) != 3:
    raise Exception("Usage: list_trello_lists.py [token] [email]")

key = "3e2cd730f3dcccbe15eaf0d39d219a37"
args = { 'key': key,
    'token': sys.argv[1],
    'filter': 'open'}

#build out api url
username = sys.argv[2]
boards_url = "https://api.trello.com/1/members/%s/boards/?%s" % (username, urllib.urlencode(args))

#get board data from api
try:
    data = urllib2.urlopen(boards_url)
except urllib2.HTTPError as inst:
    raise Exception("Key or Token incorrect")

boards = json.loads(data.read())

#loop through each board
for board in boards:
    board_id = board['id']
    lists_url = "https://api.trello.com/1/boards/%s/lists?%s" % (board_id, urllib.urlencode(args))
    data = urllib2.urlopen(lists_url)
    lists = json.loads(data.read())

    print "-- %s" % board['name']
    #output each list in board
    for lizt in lists:
        print "\"%s\" %s" % (lizt['name'], lizt['id'])
    print "\n"
</code></pre>

<p>Running this, we'll get the IDs of the lists we need</p>

<p><a href="http://timbroder.com/2013/03/automating-adding-to-trello-with-launch-center-pro-and-pythonista.html/2013-02-11-15-06-39"><img src="/images/2013/02/2013-02-11-15.06.39.png" alt="2013-02-11 15.06.39" /></a></p>

<p><a href="http://timbroder.com/2013/03/automating-adding-to-trello-with-launch-center-pro-and-pythonista.html/2013-02-11-15-07-13"><img src="/images/2013/02/2013-02-11-15.07.13.png" alt="2013-02-1115.07.13" /></a></p>

<p>Finally, we'll need to take our key, the
id of the list, what we want our card to say, and hit the API with them.  I
also add in a position so the cards I add this way will appear at the top of
their list. We'll pass these in as parameters:</p>

<p><code>"EGYlyiOdggDOaPoTUxaTQobmS6gtiX V12t3k6RQQ2r8X top the name of my card goes here"</code></p>

<p>Two things to point out inthis script:</p>

<ul>
<li>we put the name of the card at the end so we can just loop through all the remaining words and not have to worry about wrapping the name in quotes to deal with spaces.</li>
<li>since the end game of this is to run from Launch center pro, we want to jump back to Launch Center Pro at the end using it's x-callback-url</li>
</ul>

<pre><code data-language="python">#Add card to List

import urllib2
import urllib
import json
import sys
import webbrowser

arglen = len(sys.argv)

if arglen &lt; 5:     raise Exception("Usage: list_trello_lists.py [token] [list_id] [position] [card_name]") name = sys.argv[4] #take care of spaces if arglen &gt; 5:
    for i in range(5,arglen):
        name = "%s %s" % (name, sys.argv[i])

key = "3e2cd730f3dcccbe15eaf0d39d219a37"
token = sys.argv[1]
args = { 'key': key,
    'token': sys.argv[1],
    'name': name,
    'pos': sys.argv[3],
    'idList': sys.argv[2]
    }
card_add_url = "https://api.trello.com/1/cards"

try:
    data = urllib2.urlopen(card_add_url, urllib.urlencode(args))
except urllib2.HTTPError as inst:
    raise Exception("Key or Token incorrect")

#jump back to Launch Center Pro
webbrowser.open("launchpro:")
</code></pre>

<p>To run this in Launch Center Pro,
Add an Action > Pythonista > Run Script with Arguments. Put in the name
of the script, then in arguments, but everything from above except the name:
"EGYlyiOdggDOaPoTUxaTQobmS6gtiX V12t3k6RQQ2r8X top," then hit the button that
says input prompt. Now, when you run the script, Launch Center Pro will prompt
you for text, enter the name of the card and hit go.</p>

<p>Add as many of these as
you want! Just swap out the list ID.</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2013/03/why-git.html">Why Git?</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2013-03-07T15:45:55+00:00" pubdate>
                      <span class='month'>Mar</span> <span class='day'>7th</span> <span class='year'>2013</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2013/03/why-git.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2013/03/why-git.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="1123318589"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>A few months ago I gave a presentation at
<a href="http://www.alexanderinteractive.com/">work</a> about why we moved from SVN to
distributed source and git. Totally forgot to put it in a post here. I also
had a lot of fun playing with [reveal.js](http://broderboy.github.com/git-
presentation/) for the slides and setting up <a href="http://pages.github.com/">github
pages</a>. I cover the following:</p>

<ul>
<li>What is traditional source control?</li>
<li>How does distributed differ?</li>
<li>Why Git?</li>
<li>Git at <a href="http://bit.ly/aiwork">Ai</a>
Check out the slides <a href="http://broderboy.github.com/git-presentation/">here</a></li>
</ul>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2013/02/adding-a-delete-line-hotkey-in-xcode.html">Adding a Delete Line hotkey in Xcode</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2013-02-08T15:49:20+00:00" pubdate>
                      <span class='month'>Feb</span> <span class='day'>8th</span> <span class='year'>2013</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/xcode">#xcode</a>
                            </span>
                <span><a href="/2013/02/adding-a-delete-line-hotkey-in-xcode.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2013/02/adding-a-delete-line-hotkey-in-xcode.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="1072378355"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>When I switched from eclipse to sublime text 2, the first hotkey I moved over
was cmd+d to delete a line. I use it pretty heavily.  After using Xcode for a
few months it was driving me crazy that it didn't have delete line as an
option under hotkeys. Thanks to
<a href="http://stackoverflow.com/questions/5834096/how-do-i-create-a-delete-line-keyboard-shortcut-in-xcode-4-the-xcode-3-solution/12678985#12678985">stackoverflow</a> for the solve. To add a new custom key
binding, we have to edit the Key Binding plist file: (close Xcode)</p>

<pre><code data-language="c">sudo vi /Applications/Xcode.app/Contents/Frameworks/IDEKit.framework/Resources/IDETextKeyBindingSet.plist
</code></pre>

<p>Add this text just ABOVE the close of the <code>&lt;dict&gt;</code> at the bottom of this file:</p>

<pre><code data-language="XML">&lt;key&gt;Custom&lt;/key&gt;
    &lt;dict&gt;
      &lt;key&gt;Delete Current Line In One Hit&lt;/key&gt;
      &lt;string&gt;moveToEndOfLine:, deleteToBeginningOfLine:, deleteToEndOfParagraph:&lt;/string&gt;
    &lt;/dict&gt;
</code></pre>

<p>Note that:</p>

<ul>
<li>This is <em>inside</em> the existing <code>&lt;dict&gt;</code> so there is a <code>&lt;/dict&gt;&lt;/plist&gt;</code> after this</li>
<li>This associates the named action "Delete Current Line In One Hit" to the three key actions in the string. I played around with different options here to get the right combination. For instance, if you try moveToBeginningOfLine, deleteToEndOfLine instead of vice versa, then using it on empty lines will delete the line <em>and</em> the entire next line. Which is unpleasant
Save this and open XCode</li>
</ul>

<ol>
<li>Open XCode Preferences</li>
<li>Select Key Bindings</li>
<li>Click on All</li>
<li>In the SEarch box type "Delete" and search for "Delete Current Line in One Hit"</li>
<li>Add your new binding.
I use cmd+d, so I had to map duplicate to something else first</li>
</ol>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2012/12/how-to-remove-or-change-the-way-wordpress-links-to-images-in-posts.html">How to Remove or Change the way Wordpress Links to Images in Posts</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2012-12-24T20:34:43+00:00" pubdate>
                      <span class='month'>Dec</span> <span class='day'>24th</span> <span class='year'>2012</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/php">#php</a>
                        <a href="https://www.timbroder.com/blog/tags/regex">#regex</a>
                        <a href="https://www.timbroder.com/blog/tags/wordpress">#wordpress</a>
                            </span>
                <span><a href="/2012/12/how-to-remove-or-change-the-way-wordpress-links-to-images-in-posts.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2012/12/how-to-remove-or-change-the-way-wordpress-links-to-images-in-posts.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="997183744"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>By default, WordPress will link directly to an image in the category or post view.  In a project I was working on today I wanted to change that. On the category view I wanted the image just to link to the post, and in the post, I didn’t want a link at all. Useful trick I found below:</p>

<pre><code data-language="PHP">function change_image_permalink($content){
    $format = get_post_format();

    //category listing page. link image to post
    if (is_single() === FALSE AND $format == 'image'){
        $content =
        preg_replace(
            array('{&lt;a(.*?)(wp-att|wp-content/uploads)[^&gt;]*&gt;&lt;img}','{ wp-image-[0-9]*&amp;quot; /&gt;&lt;/a&gt;}'),
            array('&lt;a href=&amp;quot;' . get_permalink() . '&amp;quot;&gt;&lt;img','&amp;quot; /&gt;&lt;/a&gt;'),
            $content
        );
    }

    //post page. remove link
    else if ($format == 'image'){
        $content =
            preg_replace(
                array('{&lt;a(.*?)(wp-att|wp-content/uploads)[^&gt;]*&gt;&lt;img}','{ wp-image-[0-9]*&amp;quot; /&gt;&lt;/a&gt;}'),
                array('&lt;img','&amp;quot; /&gt;'),
                $content
            );
    }

    return $content;
}
add_filter('the_content', 'change_image_permalink');
</code></pre>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2012/12/getting-started-with-varnish-edge-side-includes-and-wordpress.html">Getting Started with Varnish Edge Side Includes and Wordpress</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2012-12-18T20:20:35+00:00" pubdate>
                      <span class='month'>Dec</span> <span class='day'>18th</span> <span class='year'>2012</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/ESI">#ESI</a>
                        <a href="https://www.timbroder.com/blog/tags/varnish">#varnish</a>
                        <a href="https://www.timbroder.com/blog/tags/wordpress">#wordpress</a>
                            </span>
                <span><a href="/2012/12/getting-started-with-varnish-edge-side-includes-and-wordpress.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2012/12/getting-started-with-varnish-edge-side-includes-and-wordpress.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="981316888"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>There are a lot of cases on blogs where once you write the post, the cache for
that page doesn't really have to be updated all that often.  Comments can be
powered by Disqus so you don't need to bust the cache every time someone
comments. If you make a change to a post, it's page and any pages that display
it (home, category, etc) should be updated automatically anyway; <a href="https://github.com/pkhamre/wp-varnish">wp-
varnish</a> is the best plugin for that
btw.</p>

<p>Now, the sidebar. That's where it can get tricky.  On a lot of the
content sites I work on, we can cache most pages for days, the backend doesn't
need to keep generating them, the content just lives in varnish. Except for
the sidebar.  This could have things like "Popular Posts" or "New Posts".
Things that are going to change outside of the context of the post you are
currently looking at.</p>

<p>This is where <a href="http://en.wikipedia.org/wiki/Edge_Side_Includes">Edge Side
Includes</a> (ESI) comes in.
For a while, <a href="http://www.akamai.com/html/support/esi.html">Akamai</a> was the only way to get this behavior, and they are quite expensive. Don't get me
wrong, they are amazing, but you have to be getting serious traffic to need them. <a href="https://www.varnish-cache.org/">Varnish</a> is one of the best caching
solutions you can use, especially for Wordpress. If you are unsure where to start with Varnish and wordpress, <a href="http://www.ewanleith.com/blog/900/10-million-hits-a-day-with-wordpress-using-a-15-server">this
article</a> is a great starting point. I'v also bookmarked some other articles <a href="https://pinboard.in/u:broderboy/t:varnish/t:wordpress">here</a>.</p>

<p>ESI was
introduced in 2.1, and really fleshed out in 3.0 and can be thought of as
fragment caching for Varnish. It's really easy to fix the example I gave
above: we want to be able to cache most of the content for 24 hours but
refresh just the sidebar every 10 mins.  Varnish will do this processing for
us, keeping the rest of the page cached, and splicing in the sidebar (and
having your webserver process just the sidebar) when it needs to. Most of what
I'm going to do below is in the ESI [documentation](https://www.varnish-
cache.org/docs/3.0/tutorial/esi.html).</p>

<p>We're going to assume that our theme
has a dynamic sidebar called "Sidebar" and that there are cases where we want
ESI to be active (production) and some where wordpress should just behave
normally (dev).  This is what we have before we start thinking about Varnish:</p>

<pre><code data-language="PHP">&lt;div class=&amp;quot;five columns&amp;quot;&gt;
&lt;?php
    if ( !function_exists('dynamic_sidebar') || !dynamic_sidebar(&amp;quot;Sidebar&amp;quot;) ) :
    endif;
?&gt;
&lt;/div&gt;
</code></pre>

<p>The two varnish tags we are going to use are an esi comment, and an esi:remove tag. These are the switch that will process the page properly whether you have ESI or not. esi:remove will ignore everything between them if ESI is enabled. This is where we put our “normal processing” code. If ESI is not active, this code will run as normal. Inside the esi comment we put the code that we want to run if ESI is enabled. If it is not, the code will be ignored.</p>

<pre><code data-language="PHP">&lt;div class=&amp;quot;five columns&amp;quot;&gt;
    &lt;esi:remove&gt;
        &lt;?php
        if ( !function_exists('dynamic_sidebar') || !dynamic_sidebar(&amp;quot;Sidebar&amp;quot;) ) :
        endif;
        ?&gt;
    &lt;/esi:remove&gt;
    &lt;!--esi
        &lt;esi:include src=&amp;quot;/wp-content/plugins/myplugin/esihandler.php&amp;quot;/&gt;
    --&gt;
&lt;/div&gt;
</code></pre>

<p>Now our sidebar display is ESI ready, but we need to give Varnish an endpoint to hit so it can generate the fragment of the sidebar. So lets create esihandler.php:</p>

<pre><code data-language="PHP">&lt;?php

$cwd = getcwd();
$path = substr($cwd, 0, strpos($cwd, 'wp-content/'));
require $path . 'wp-blog-header.php';

if ( !function_exists('dynamic_sidebar') || !dynamic_sidebar(&amp;quot;Sidebar&amp;quot;) ) :
endif;
</code></pre>

<p>Lastly, we’ll have to tell Varnish to cache for different timeframes. A full Varnish config is out of the scope of this post, see the links above for more info. What we need is in the sub vcl_fetch call. Add this at the top:</p>

<pre><code data-language="c">if (req.url ~ &amp;quot;esihandler.php&amp;quot;) {
    set beresp.ttl = 10m;
}
else {
    set beresp.do_esi = true;
    set beresp.ttl = 1440m;
}
</code></pre>

<p>And you should be all set. When developing you can use smaller timeframes (10 seconds, and 1min). Drop some logging in to see it in action.</p>

<p>Let me know of any questions in the comments</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2012/09/generating-an-inlineadmin-form-on-the-fly-in-django.html">Generating an InlineModelAdmin Form on the fly in Django</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2012-09-11T19:17:52+00:00" pubdate>
                      <span class='month'>Sep</span> <span class='day'>11th</span> <span class='year'>2012</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/django">#django</a>
                            </span>
                <span><a href="/2012/09/generating-an-inlineadmin-form-on-the-fly-in-django.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2012/09/generating-an-inlineadmin-form-on-the-fly-in-django.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="840145019"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>I'm adding drag/drop uploading to the django admin for one of our open source
projects called <a href="https://github.com/aiaio/ai-stager">Stager</a>. A blog post
about that will follow, it's not screen-shot ready yet.  While doing this I
knew we needed a pretty seamless transition after the upload finished, and
that we would have to refresh the inline.  I didn't want a full page refresh,
so let's ajax it in.</p>

<p>For these examples just assume that we have a parent CompAdmin which has an model of Comp and an inline called CompSlideInline.  We store the instance of the Comp in comp.</p>

<pre><code data-language="python">from django.template import loader, Context
from django.contrib.admin import helpers
from django.db import transaction
from django.contrib import admin

comp = Comp.objects.get(id=comp_id)
#get the current site
admin_site = admin.site
compAdmin = CompAdmin(Comp, admin_site)

#get all possible inlines for the parent Admin
inline_instances = compAdmin.get_inline_instances(request)
prefixes = {}

for FormSet, inline in zip(compAdmin.get_formsets(request, comp), inline_instances):
    #get the inline of interest and generate it's formset
    if isinstance(inline, CompSlideInline):
        prefix = FormSet.get_default_prefix()
        prefixes[prefix] = prefixes.get(prefix, 0) + 1
        if prefixes[prefix] != 1 or not prefix:
            prefix = &amp;quot;%s-%s&amp;quot; % (prefix, prefixes[prefix])
        formset = FormSet(instance=comp, prefix=prefix, queryset=inline.queryset(request))

#get possible fieldsets, readonly, and prepopulated information for the parent Admin
fieldsets = list(inline.get_fieldsets(request, comp))
readonly = list(inline.get_readonly_fields(request, comp))
prepopulated = dict(inline.get_prepopulated_fields(request, comp))

#generate the inline formset
inline_admin_formset = helpers.InlineAdminFormSet(inline, formset,
            fieldsets, prepopulated, readonly, model_admin=compAdmin)

#render the template
t = loader.get_template('tabular.html')
c = Context({ 'inline_admin_formset': inline_admin_formset })
rendered = t.render(c)
</code></pre>
</section>


</article>
<nav>
    <a href="https://www.timbroder.com/blog/categories/8">Newer Posts</a><br />
    <a href="https://www.timbroder.com/blog/categories/10">Older Posts</a><br />
</nav>

    </main>


                        <footer class="site-footer clearfix">
    <section>
            <span class="tag size2"><a href="/blog/tags/"></a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/AVSpeechSynthesizer">AVSpeechSynthesizer</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Ai">Ai</a></span>
            &nbsp;
        <span class="tag size8"><a href="/blog/tags/Android">Android</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Atom">Atom</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Avengers">Avengers</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman">Batman</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman%20Inc.">Batman Inc.</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman%20and%20Robin">Batman and Robin</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/CKEditor">CKEditor</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Calibre">Calibre</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Cheese">Cheese</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ComicCon">ComicCon</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/CoreData">CoreData</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/DRM">DRM</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/Docs%20Spreadsheets">Docs Spreadsheets</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ESI">ESI</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Fontis">Fontis</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/GME">GME</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/GTD">GTD</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/GWT">GWT</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Garlic">Garlic</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Google">Google</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Google%20Reader">Google Reader</a></span>
            &nbsp;
        <span class="tag size9"><a href="/blog/tags/HOWTO">HOWTO</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Hulu">Hulu</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Internet%20Explorer">Internet Explorer</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/JIRA">JIRA</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Kindle">Kindle</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/Mashups">Mashups</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Memcached">Memcached</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/OmniFocus">OmniFocus</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Oracle">Oracle</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/PHPUnit">PHPUnit</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/PostgreSQL">PostgreSQL</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/RSS">RSS</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Redmine">Redmine</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Remember%20the%20Milk">Remember the Milk</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Ruby">Ruby</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/SQL">SQL</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Shared%20web%20hosting%20service">Shared web hosting service</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Siri">Siri</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Skype">Skype</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Sony%20Reader">Sony Reader</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Stan%20Lee">Stan Lee</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/TDD">TDD</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Terminator">Terminator</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/TinyMCE">TinyMCE</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Vibrams">Vibrams</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Virtual%20hosting">Virtual hosting</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Virtual%20private%20server">Virtual private server</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Walking%20Dead">Walking Dead</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Web%20hosting">Web hosting</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/YUI">YUI</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Zend">Zend</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/adwhirl">adwhirl</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/adwords">adwords</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/aiaio">aiaio</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ajax">ajax</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/alfred">alfred</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/analytics">analytics</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/angularjs">angularjs</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/appengine">appengine</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/apple">apple</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/applepay">applepay</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/apps">apps</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/autocomplete">autocomplete</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/automation">automation</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/beta">beta</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/bit.ly">bit.ly</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/blackberry">blackberry</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/blogger">blogger</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/bookmarks">bookmarks</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/brightkite">brightkite</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/calendar">calendar</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/chrome">chrome</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/coffee">coffee</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/css">css</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/debug">debug</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/digg">digg</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/django">django</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/drafts">drafts</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/dropbox">dropbox</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/encryption">encryption</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/engagement">engagement</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/events">events</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/facebook">facebook</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/firefox">firefox</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/friendfeed">friendfeed</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/gadgets">gadgets</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/gchat">gchat</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/gdata">gdata</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/gdrive">gdrive</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/gears">gears</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/git">git</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/github">github</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/gmail">gmail</a></span>
            &nbsp;
        <span class="tag size5"><a href="/blog/tags/gpowered.net">gpowered.net</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/greasemonkey">greasemonkey</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/groups">groups</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/homebrew">homebrew</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/instapaper">instapaper</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/interfacebuilder">interfacebuilder</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/ios">ios</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/ipad">ipad</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/iphone">iphone</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/javascript">javascript</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/jira">jira</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/jquery">jquery</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/json">json</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/kids">kids</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/laravel">laravel</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/launch%20center%20pro">launch center pro</a></span>
            &nbsp;
        <span class="tag size5"><a href="/blog/tags/magento">magento</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/maps">maps</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mercurial">mercurial</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mock">mock</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mongodb">mongodb</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/music">music</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/mysql">mysql</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/netbook">netbook</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/nosql">nosql</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/objective%20c">objective c</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/oil">oil</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/omnifocus">omnifocus</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/opensocial">opensocial</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/opensource">opensource</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/os">os</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/osx">osx</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/pesto">pesto</a></span>
            &nbsp;
        <span class="tag size7"><a href="/blog/tags/php">php</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/picasa%20web">picasa web</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/podcasts">podcasts</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/powershell">powershell</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/primal">primal</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/productivity">productivity</a></span>
            &nbsp;
        <span class="tag size6"><a href="/blog/tags/python">python</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/pythonista">pythonista</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/quick">quick</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/reader">reader</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/realm">realm</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/regex">regex</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/running">running</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/search">search</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/security">security</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/seo">seo</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/sketch">sketch</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/skynet">skynet</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/sleep">sleep</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/socialgraph">socialgraph</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/solr">solr</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/startup">startup</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/swift">swift</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/testing">testing</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/textmate">textmate</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/timbroder.com">timbroder.com</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/todoist">todoist</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/twitter">twitter</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/twitter2gTalk">twitter2gTalk</a></span>
            &nbsp;
        <span class="tag size6"><a href="/blog/tags/ubuntu">ubuntu</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/urls">urls</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/vagrant">vagrant</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/varnish">varnish</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/virtualenv">virtualenv</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/winamp">winamp</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/windows">windows</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/wordpress">wordpress</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/xbox">xbox</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/xcode">xcode</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/xml">xml</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/yahoo%20pipes">yahoo pipes</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/youtube">youtube</a></span>
            &nbsp;
    
    </section>
    <section class="copyright">
        Copyright &copy; 2007-2018 -
         Tim Broder -         <span class="credit">Powered by <a href="http://sculpin.io">Sculpin</a></span>
    </section>
</footer>
                <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/index.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/rainbow.min.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/rlns.min.js"></script>

<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'timbrodercom'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script>

<script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-17099661-1', 'auto');
    ga('send', 'pageview');

</script>    </div>
</body>
</html>
