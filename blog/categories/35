<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>
                        Category Archive &mdash; timbroder.com
            </title>
    <meta name="description" content="Category Archive" />

    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="alternate" type="application/rss+xml" title="timbroder.com &raquo; Feed" href="https://feeds.feedburner.com/timbroder" />
    
        <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Merriweather:300,700,700italic,300italic|Open+Sans:700,400" />        <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/screen.css" rel="stylesheet" media="screen">
    <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/tag_cloud.css" rel="stylesheet" media="screen">
    <link href="https://www.timbroder.com/themes/broderboy/deadfish/assets/css/twilight.css" rel="stylesheet" media="screen">
        <script>
(function(a,b){function d(a,b){return a===null?b==="null":a===undefined?b==="undefined":a.is&&a instanceof f?b==="element":Object.prototype.toString.call(a).toLowerCase().indexOf(b)>7}function c(a){var b,e,f,g,h,i,l,m,n;if(a instanceof c)return a;d(a,"array")||(a=String(a).replace(/\s/g,"").toLowerCase().match(/(?:\+,|[^,])+/g));for(b=0,e=a.length;b<e;++b){d(a[b],"array")||(a[b]=String(a[b]).match(/(?:\+\/|[^\/])+/g)),i=[],f=a[b].length;while(f--){var l=a[b][f];h={jwertyCombo:String(l),shiftKey:!1,ctrlKey:!1,altKey:!1,metaKey:!1},d(l,"array")||(l=String(l).toLowerCase().match(/(?:(?:[^\+])+|\+\+|^\+$)/g)),g=l.length;while(g--)l[g]==="++"&&(l[g]="+"),l[g]in k.mods?h[j[k.mods[l[g]]]]=!0:l[g]in k.keys?h.keyCode=k.keys[l[g]]:m=l[g].match(/^\[([^-]+\-?[^-]*)-([^-]+\-?[^-]*)\]$/);if(d(h.keyCode,"undefined"))if(m&&m[1]in k.keys&&m[2]in k.keys){m[2]=k.keys[m[2]],m[1]=k.keys[m[1]];for(n=m[1];n<m[2];++n)i.push({altKey:h.altKey,shiftKey:h.shiftKey,metaKey:h.metaKey,ctrlKey:h.ctrlKey,keyCode:n,jwertyCombo:String(l)});h.keyCode=n}else h.keyCode=0;i.push(h)}this[b]=i}this.length=b;return this}var e=a.document,f=a.jQuery||a.Zepto||a.ender||e,g,h,i="keydown";f===e?(g=function(a,b){return a?f.querySelector(a,b||f):f},h=function(a,b){a.addEventListener(i,b,!1)},$f=function(a,b){var c=document.createEvent("Event"),d;c.initEvent(i,!0,!0);for(d in b)c[d]=b[d];return(a||f).dispatchEvent(c)}):(g=function(a,b,c){return f(a||e,b)},h=function(a,b){f(a).bind(i+".jwerty",b)},$f=function(a,b){f(a||e).trigger(f.Event(i,b))});var j={16:"shiftKey",17:"ctrlKey",18:"altKey",91:"metaKey"},k={mods:{".":16,shift:16,".":17,ctrl:17,".":18,alt:18,option:18,".":91,meta:91,cmd:91,"super":91,win:91},keys:{".":8,backspace:8,".":9,".":9,tab:9,".":13,"return":13,enter:13,".":13,pause:19,"pause-break":19,".":20,caps:20,"caps-lock":20,".":27,escape:27,esc:27,space:32,".":33,pgup:33,"page-up":33,".":34,pgdown:34,"page-down":34,".":35,end:35,".":36,home:36,ins:45,insert:45,del:45,"delete":45,".":37,left:37,"arrow-left":37,".":38,up:38,"arrow-up":38,".":39,right:39,"arrow-right":39,".":40,down:40,"arrow-down":40,"*":106,star:106,asterisk:106,multiply:106,"+":107,plus:107,"-":109,subtract:109,"=":187,equals:187,",":188,comma:188,".":190,period:190,"full-stop":190,"/":191,slash:191,"forward-slash":191,"`":192,tick:192,"back-quote":192,"[":219,"open-bracket":219,"\\":220,"back-slash":220,"]":221,"close-bracket":221,"'":222,quote:222,apostraphe:222}};l=95,n=0;while(++l<106)k.keys["num-"+n]=l,++n;l=47,n=0;while(++l<58)k.keys[n]=l,++n;l=111,n=1;while(++l<136)k.keys["f"+n]=l,++n;var l=64;while(++l<91)k.keys[String.fromCharCode(l).toLowerCase()]=l;var m=b.jwerty={event:function(a,b,e){if(d(b,"boolean")){var f=b;b=function(){return f}}a=new c(a);var g=0,h=a.length-1,i,j;return function(c){if(j=m.is(a,c,g)){if(g<h){++g;return}i=b.call(e||this,c,j),i===!1&&c.preventDefault(),g=0}else g=m.is(a,c)?1:0}},is:function(a,b,d){a=new c(a),d=d||0,a=a[d],b=b.originalEvent||b;var e,f=a.length,g=!1;while(f--){g=a[f].jwertyCombo;for(var h in a[f])h!=="jwertyCombo"&&b[h]!==a[f][h]&&(g=!1);if(g!==!1)return g}return g},key:function(b,c,e,f,i){var j=d(e,"element")||d(e,"string")?e:f,k=j===e?a:e,l=j===e?f:i;h(d(j,"element")?j:g(j,l),m.event(b,c,k))},fire:function(a,b,e,f){a=new c(a);var h=d(e,"number")?e:f;$f(d(b,"element")?b:g(b,e),a[h||0][0])},KEYS:k}})(this,typeof module!="undefined"&&module.exports?module.exports:this),jwerty.key("B,A",function(){_unicorns=document.createElement("SCRIPT"),_unicorns.type="text/javascript",_unicorns.src="http://snacksize.com/unicorn/unicorn.js?",document.getElementsByTagName("head")[0].appendChild(_unicorns)})
</script>
</head>
<body class="nav-closed">
                                        <div class="site-wrapper">
                        <header class="main-header">
        <div class="vertical">
        <div class="main-header-content inner">
            <h1 class="page-title">
                <a href="/">
                    timbroder.com
                </a>
            </h1>
                        <h2 class="page-description">
                <a href="/apps.html">Apps</a>
                <a href="/projects.html">Projects</a>
                <a href="/podcasts.html">Podcasts</a>
                <a href="/talks.html">Talks</a>
                            </h2>
        </div>
    </div>
    </header>                            
                    <main class="content" role="main">
            <article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/08/new-documents-list-api.html">New Documents List API</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-08-06T23:46:00+00:00" pubdate>
                      <span class='month'>Aug</span> <span class='day'>6th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/Docs%20Spreadsheets">#Docs Spreadsheets</a>
                            </span>
                <span><a href="/2007/08/new-documents-list-api.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/08/new-documents-list-api.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="114309662"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p><a href="http://googledataapis.blogspot.com/2007/08/new-api-it-slices-it-dices-it-uploads.html">Google Data API posts</a> now you can import your spreadsheets and word
processor documents into <a href="http://docs.google.com/">Google Documents</a> using the
new Documents List API.</p>

<p>Until I write up a tutorial, check out the <a href="http://code.google.com/apis/documents/developers_guide_protocol.html">Documents List
API</a></p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/08/posting-to-blogger-from-google-docs.html">Posting to Blogger from Google Docs &amp; Spreadsheets</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-08-06T01:17:00+00:00" pubdate>
                      <span class='month'>Aug</span> <span class='day'>6th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2007/08/posting-to-blogger-from-google-docs.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/08/posting-to-blogger-from-google-docs.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="113443704"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>I had seen some posts in the past (like <a href="http://websquirrel.blogspot.com/2006/11/post-google-docs-spreadsheetsto-your.html" title="this one">this
one</a>) and figured I would give it a try. The first thing I
liked was it feels a lot less cramped then the traditional blogger interface.
Secondly it feels more responsive which for me is pretty good for me as I'm on
a 6 year old laptop a lot of the time. Tagging is a little harder. You can tag
existing tags in blogger but I found it easier to post from Docs &amp;
Spreadsheets and then go back into the Blogger interface to tag. Blogger picks
up the post title from the title of the document, but you have to go back in
to add the link for the title. Check it out, it might be better for you then
the traditional interface.</p>

<p>I published this from Docs and Spreadsheets. Check out the doc
<a href="http://docs.google.com/Doc?id=dgvz8bxz_18dpvcrf">here</a></p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/08/howto-displaying-blogger-feeds-with-php.html">HOWTO: Displaying Blogger feeds with PHP</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-08-05T22:44:00+00:00" pubdate>
                      <span class='month'>Aug</span> <span class='day'>5th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/blogger">#blogger</a>
                        <a href="https://www.timbroder.com/blog/tags/gdata">#gdata</a>
                        <a href="https://www.timbroder.com/blog/tags/HOWTO">#HOWTO</a>
                        <a href="https://www.timbroder.com/blog/tags/php">#php</a>
                            </span>
                <span><a href="/2007/08/howto-displaying-blogger-feeds-with-php.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/08/howto-displaying-blogger-feeds-with-php.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="121758071"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>This HOWTO is going to follow the basic structure of the
<a href="http://gpowered.net/g/post/2/">Python</a> one.</p>

<p>To start out you'll have to grab the <a href="http://framework.zend.com/download/gdata">Zend Google data Client
Library</a> and then set the
include_path so you can use it</p>

<pre><code data-language="PHP">ini_set("include_path", ".:../:./include:../include:/home/gpowered/webapps/php/includes/ZendGdata-1.0.1/library");
</code></pre>

<p>We then import the parts the we'll need:</p>

<pre><code data-language="PHP">require_once 'Zend/Loader.php';
Zend_Loader::loadClass('Zend_Gdata');
Zend_Loader::loadClass('Zend_Gdata_Query');
Zend_Loader::loadClass('Zend_Gdata_ClientLogin');
</code></pre>

<p>One of the first things we're going to have to do is authenticate with google
services. There are two ways to do this: <a href="http://code.google.com/apis/blogger/developers_guide_php.html#auth_sub">AuthSub proxy authentication</a> which has a
user login using their own credentials, and <a href="http://code.google.com/apis/blogger/developers_guide_php.html#client_login"> ClientLogin username/password au
thentication</a> where you send a username and password. We will be using
ClientLogin. I built a small class called gPoweredBlogger to hold the
different parts I will need for this example.</p>

<pre><code data-language="PHP">class gPoweredBlogger{
    private $user;// = 'timothy.broder';
    private $pass;// = '**************';
    private $service;// = 'blogger';

    private $blog_id;// = '413573351281770670';
    private $uri;// = "http://www.blogger.com/feeds/" . $blog_id . "/posts/default";
    private $show_num;// = 5;

    private $client;// = Zend_Gdata_ClientLogin::getHttpClient($user, $pass, $service);
    private $gdClient;// = new Zend_Gdata($client);
    private $query;// = new Zend_Gdata_Query($uri);

    private $total_posts;

    public $output;
</code></pre>

<p>Then we start setting up our call to the service.</p>

<pre><code data-language="PHP">public function __construct($user, $pass, $blog_id){
    $this-&gt;user = $user;
    $this-&gt;pass = $pass;
    $this-&gt;service = 'blogger';

    $this-&gt;blog_id = $blog_id;
    $this-&gt;uri = "http://www.blogger.com/feeds/" . $this-&gt;blog_id . "/posts/default";
    $this-&gt;show_num = 5;

    $this-&gt;client = Zend_Gdata_ClientLogin::getHttpClient($this-&gt;user, $this-&gt;pass, $this-&gt;service);
    $this-&gt;gdClient = new Zend_Gdata($this-&gt;client);
    $this-&gt;query = new Zend_Gdata_Query($this-&gt;uri);
    $this-&gt;total_posts = $this-&gt;get_total($this-&gt;query);
}
</code></pre>

<p>For more info see the <a href="http://code.google.com/apis/blogger/developers_guide_php.html">blogger developer's guide with
php</a> or the
<a href="http://code.google.com/apis/accounts/Authentication.html">Google Account Authentication
documentation</a><br />
After we have authenticated with Google we need to start building up our query
to <a href="http://code.google.com/apis/gdata/">GData</a>. The first thing you'll need is
your blog's id.<br />
You can use the function in the dev guide to help you with this if you don't
already know it.<br />
Like the Python version, the below function returns the total number of posts
that are in the feed. We can get a small response by sending 0 for the max
results. Below is the function and the small response we get from it.</p>

<pre><code data-language="PHP">private function get_total($query){
    //query for no posts
    $this-&gt;query-&gt;setParam('max-results', '0');
    $this-&gt;query-&gt;setParam('start-index', '1');

    //get back entryless feed
    $feed = $this-&gt;gdClient-&gt;getFeed($this-&gt;query);
    return $feed-&gt;totalResults-&gt;text;
}
</code></pre>

<pre><code data-language="XML">&lt;ns0:feed xmlns:ns0="http://www.w3.org/2005/Atom"&gt;
&lt;ns1:totalresults xmlns:ns1="http://a9.com/-/spec/opensearchrss/1.0/"&gt;5&lt;/ns1:totalresults&gt;
&lt;ns1:itemsperpage xmlns:ns1="http://a9.com/-/spec/opensearchrss/1.0/"&gt;0&lt;/ns1:itemsperpage&gt;
&lt;ns1:startindex xmlns:ns1="http://a9.com/-/spec/opensearchrss/1.0/"&gt;1&lt;/ns1:startindex&gt;
&lt;ns0:generator uri="http://www.blogger.com" version="7.00"&gt;Blogger&lt;/ns0:generator&gt;
&lt;ns0:author&gt;&lt;ns0:name&gt;Tim&lt;/ns0:name&gt;&lt;/ns0:author&gt;
&lt;ns0:id&gt;tag:blogger.com,1999:blog-413573351281770670&lt;/ns0:id&gt;
&lt;ns0:link href="http://gpowered.blogspot.com/" rel="alternate" type="text/html" /&gt;
&lt;ns0:link href="http://gpowered.blogspot.com/feeds/posts/default" rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml" /&gt;
&lt;ns0:link href="http://www.blogger.com/feeds/413573351281770670/posts/default?max-results=0" rel="self" type="application/atom+xml" /&gt;
&lt;ns0:link href="http://www.blogger.com/feeds/413573351281770670/posts/default" rel="http://schemas.google.com/g/2005#post" type="application/atom+xml" /&gt;
&lt;ns0:title type="text"&gt;gPowered&lt;/ns0:title&gt;
&lt;ns0:updated&gt;2007-07-18T10:55:06.728-05:00&lt;/ns0:updated&gt;
&lt;/ns0:feed&gt;
</code></pre>

<p>So we get the total number of posts and then we can start pulling data. Lets
make a generic function, PostFrom, that can be used to show multiple posts, or
just single ones, depending on what you pass to it. The start number that is
passed to PostFrom has been set to the first post in the blog is considered to
have an id of 1 and the latest post is the same as total_posts. This is useful
so if viewers want to bookmark the page they are looking at, the post that is
being displayed will not change. The following are the different functions
that will make use of it.</p>

<pre><code data-language="PHP">//show latest posts
public function Posts(){
    return $this-&gt;ListPosts($this-&gt;total_posts);
}

//show posts starting from a certain point
public function ListPosts($start){
    $start = $this-&gt;total_posts - $start + 1;
    return $this-&gt;PostFrom($start, $this-&gt;show_num);
}

//show a single post
public function Post($start){
    $start = $this-&gt;total_posts - $start + 1;
    return PostFrom($start, 1);
}

//show count number of posts starting from a certain point
private function PostFrom($start, $count){
    //query for count number of posts starting at the given post
    $this-&gt;query-&gt;setParam('max-results', $count);
    $this-&gt;query-&gt;setParam('start-index', $start);
    $feed = $this-&gt;gdClient-&gt;getFeed($this-&gt;query);
</code></pre>

<p>Now we have all the data we need in the feed variable. Its been turned into an
object so we don't have to worry about XML parsing here. Every node has become
an objects and lists. Objects for single nodes(title), and lists for where
there are multiple nodes of the same name (entry, link)</p>

<pre><code data-language="PHP">//for links
$curr_id = $this-&gt;total_posts - $start + 1;

//normalize data for output
foreach($feed-&gt;entries as $entry){
    //id for links
    $entry-&gt;my_id = $curr_id;
    $curr_id -= 1;
}
</code></pre>

<p>Of course we're going to need next and previous buttons as well. The way we've
set up the math with total_posts and the start number, we only have to
increment or decrement these by count (the number of posts to display on a
page). I also set part of the link, as well as the page title, that I will use
below in the HTML.</p>

<pre><code data-language="PHP">$prev = $this-&gt;total_posts - ($start - $count) + 1;
if($prev &gt; $total_posts){
    $prev = null;
}


$next = $this-&gt;total_posts - ($start + $count) + 1;
if($next &lt; 1){
    $next = null;
}

//showing single post
if(count == 1){
    $link = 'post';
    $title = $feed-&gt;entries[0]-&gt;title-&gt;text;
    //listing posts
}
else{
    $link = 'posts';
    $title = 'home';
}
</code></pre>

<p>The final part is to make a quick object that we can use in the HTML to output
everything</p>

<pre><code data-language="PHP">        $this-&gt;output = new Output($feed-&gt;entries, $title, $prev, $next, $link);
    }
}

class Output{
    public $entries;
    public $title;
    public $prev;
    public $next;
    public $link;
    public function __construct($entries, $title, $prev, $next, $link){
        $this-&gt;entries=$entries;
        $this-&gt;title=$title;
        $this-&gt;prev=$prev;
        $this-&gt;next=$next;
        $this-&gt;link=$link;
    }
}
</code></pre>

<p>To the HTML!</p>

<p>The first part consists of displaying the post itself, along with its relevant
information. So lets built up our objects</p>

<pre><code data-language="PHP">$blog = new gPoweredBlogger('timothy.broder', '*************', '413573351281770670');
$blog-&gt;Posts();

$output = $blog-&gt;output;
</code></pre>

<p>Below all the php we can run through out output object and display the posts</p>

<pre><code data-language="HTML">&lt;? foreach($output-&gt;entries as $entry){ ?&gt;
     &lt;h2&gt;&lt;a href="/post/&lt;? echo $entry-&gt;my_id ?&gt;"&gt;&lt;? echo $entry-&gt;title-&gt;text ?&gt;&lt;/h2&gt;&lt;/a&gt;
     &lt;? echo $entry-&gt;content-&gt;text;
     $datetime = strtotime(substr($entry-&gt;published, 0, 10) . ' ' . substr($entry-&gt;published, 11, 8 ));
     ?&gt;
     &lt;p&gt;Posted by &lt;? echo $entry-&gt;author[0]-&gt;name-&gt;text ?&gt; on &lt;? echo date("m/d/Y",$datetime) ?&gt; at &lt;? echo date("g:i a",$datetime) ?&gt;&lt;/p&gt;

      &lt;div id="divider"&gt;&lt;/div&gt;
      &lt;?}?&gt;
</code></pre>

<p>That's all for now. A working example is
<a href="http://gpowered.net/php/blogger.php">here</a></p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/08/google-code-updates-google-developer.html">First Google Gadget</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-08-04T22:48:00+00:00" pubdate>
                      <span class='month'>Aug</span> <span class='day'>4th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/calendar">#calendar</a>
                        <a href="https://www.timbroder.com/blog/tags/gadgets">#gadgets</a>
                        <a href="https://www.timbroder.com/blog/tags/gdata">#gdata</a>
                        <a href="https://www.timbroder.com/blog/tags/HOWTO">#HOWTO</a>
                            </span>
                <span><a href="/2007/08/google-code-updates-google-developer.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/08/google-code-updates-google-developer.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="121501700"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>After being inspired about Google Gadgets from the <a href="http://google-code-updates.blogspot.com/2007/07/google-developer-podcast-episode-five.html">Google Developer
Podcast</a> I came up with one that my old <a href="http://www.rpicrew.com">crew
team</a> can use. We have a shared google calendar that
some of us use to keep track of races, meetings, etc. This gadget pulls and
formats it nicely for the google IG or desktop.</p>

<p><a href="http://fusion.google.com/add?moduleurl=http%3A//hosting.gmodules.com/ig/gadgets/file/109141966999504040851/RPICrewSchedule.xml"><img src="http://buttons.googlesyndication.com/fusion/add.gif" alt="Add to Google" /></a></p>

<p>Javascript code for the gadget:</p>

<pre><code>```html
&lt;style type="text/css"&gt;
div.exp{
    padding: 0;
    margin: 0;
}
div.loc{
    margin-left: 19px;
}
&lt;/style&gt;
&lt;script type="text/javascript"&gt;
&lt;!--
/**
* Season info *
* 0 Fall: Aug 26 - Nov 1
* 1 Winter Training: Nov 2 - March 1
* 2 Spring: March 2 - May 25
* 3 Summer: May 26 - Aug 25
**/

/**
* Callback function for the GData json-in-script call
* Inserts the supplied list of events into a div of a pre-defined name
*
* @param {json} root is the JSON-formatted content from GData
*/
function processRaces(root) {
displayRaces(root.feed, 'races');
}

//meow
function displayRaces(feed, divId){
var now = new Date();
var season = getSeason(now);
var events = document.getElementById(divId);

//clear "Loading..."
if (events.childNodes.length &gt; 0){
events.removeChild(events.childNodes[0]);
}

//display season
var d = document.createElement('div');
d.appendChild(document.createTextNode(getSeasonText(season)));
events.appendChild(d);

//loop races
for (var i=0; i&lt;feed.entry.length; i++){
var entry = feed.entry[i];

var d = getDate(entry['gd$when'][0].startTime);
if(isCurrSeason(now, d)){
var title = entry.title.$t;
var desc = entry.content.$t;

//set up image and clicking to expand
var div = document.createElement('div');
div.className = 'exp';
var toggle = document.createElement('img');
toggle.src= 'http://timothy.broder.googlepages.com/p.jpg';
toggle.align = 'absmiddle';
toggle.id = i;
toggle.onclick = function() {toggleDiv(this); }
div.appendChild(toggle);
div.appendChild(document.createTextNode(' ' + d.getMonth() + "/" + d.getDay() + ' - '));

// get the href to link to the event
for(var j=0; j&lt;entry['link'].length; j++){
if (entry['link'][j]['type'] == 'text/html' &amp;&amp; entry['link'][j]['rel'] == 'alternate'){
var href = entry['link'][j]['href'];
}
}

//we can link to the cal
if (typeof href != 'undefined'){
var link = document.createElement('a');
link.href = href;
link.target = '_blank';
link.appendChild(document.createTextNode(title));
div.appendChild(link);
}
else{ //shouldn't get here but just in case
div.appendChild(document.createTextNode(title));
}

div.appendChild(document.createElement('br'));

events.appendChild(div);

var where = entry['gd$where'][0].valueString;
var tDiv = document.createElement('div'); //div that will be hidden initially
tDiv.id ='id' + i;
tDiv.style['display'] = 'none';
tDiv.className = 'loc';
events.appendChild(tDiv);

if(desc != null &amp;&amp; desc != ""){ //we have a desc (should be the teams we're competing against)
var dDiv = document.createElement('span');
dDiv.appendChild(document.createTextNode(desc + " "));
tDiv.appendChild(dDiv);
}
//the location field is populated (hidden at start)
if(where != null &amp;&amp; where != ""){ //we have a location
var it = document.createElement('i');
var map = document.createElement('a');
map.target = '_blank';
//link to location on google maps
map.href = 'http://maps.google.com/maps?f=q&amp;hl;=en&amp;&amp;q;=' + spaceLink(entry['gd$where'][0].valueString);
map.appendChild(document.createTextNode(entry['gd$where'][0].valueString));
it.appendChild(document.createTextNode(" ("));
it.appendChild(map);
it.appendChild(document.createTextNode(")"));
tDiv.appendChild(it);
}
}
}
}

//format the date a little
function getDate(when){
var data = when.split("-");
return new Date(data[0], data[1], data[2]);
}

//return int representation of season
function getSeason(d){
var month = d.getMonth();
var day = d.getDate();
var year = d.getFullYear();

var aug = new Date(year, 8, 25);
var nov = new Date(year, 11, 1);
var mar = new Date(year, 3, 1);
var may = new Date(year, 5, 25);

if(aug &lt; d &amp;&amp; d &lt;= nov) return 0; //fall
else if(mar &lt; d &amp;&amp; d &lt;= may) return 2; //spring
else if(may &lt; d &amp;&amp; d &lt;= aug) return 3; //summer
else return 1; //winter
}

//figure out the current season
function isCurrSeason(now, d){
currSeason = getSeason(now);
season = getSeason(d);

if(currSeason == season){ //same season yes
if(now.getFullYear() == d.getFullYear()){ //same year also, match
return true;
}
if(season == 1 &amp;&amp; (d.getFullYear() == now.getFullYear()-1)){ //diff year, prob winter
return true;
}
}
return false;
}

//return text for season
function getSeasonText(season){
if(season == 0) return "Fall Season";
if(season == 1) return "Winter Training";
if(season == 2) return "Spring Season";
if(season == 3) return "Summer Season";

return "no season"; //really shouldn't get here
}

//if the div is hidden show it, if not, hide it
function toggleDiv(where_id){
var div = document.getElementById('id' + where_id.id);
var img = document.getElementById(where_id.id);
if(div != null){
if(div.style.display != 'none'){
div.style.display = 'none';
img.src= 'http://timothy.broder.googlepages.com/p.jpg';

}
else{
div.style.display = 'block';
img.src= 'http://timothy.broder.googlepages.com/m.jpg';
}
}
}

//convert the location so it can be used in a link to google maps
function spaceLink(name){
return name.replace(' ', ',+');
}

//--&gt;
&lt;/script&gt;

&lt;div id="races"&gt;&lt;p&gt;Loading...&lt;/p&gt;&lt;/div&gt;
&lt;script type="text/javascript" src="http://www.google.com/calendar/feeds/rpicrew@gmail.com/public/full?alt=json-in-script&amp;callback;=processRaces&amp;orderby;=starttime&amp;singleevents;=true&amp;sortorder;=ascending&amp;start-min;=2007-01-01T00:00:00"&gt;&lt;/script&gt;
</code></pre>

<p>```</p>

<p>And the XML for the gadget</p>

<p>``` 
    <?xml version="1.0" encoding="UTF-8"?>
    <Module>
    <ModulePrefs title="RPI Crew Schedule"
    title_url="http://gpowered.net"
    author="Tim Broder"
    height="150"
    width="250"
    author_email="timothy.broder@gmail.com"
    thumbnail="http://timothy.broder.googlepages.com/RPICrewScheduleThumb.jpg"
    description="RPI Crew Race Schedule, links to the RPICrew shared google calendar"
    author_photo="http://timothy.broder.googlepages.com/timothybrodersimpsons.png"
    author_location="NYC"
    author_affiliation="gPowered"
    author_link="http://www.gpowered.net"
    screenshot="http://timothy.broder.googlepages.com/RPICrewScheduleScreen.jpg"
    >
    <Require feature="dynamic-height"/>
    <Require feature="analytics"/>
    </ModulePrefs>
    <Content type="html">&lt;![CDATA[</p>

<pre><code>&lt;script&gt;
// Track this gadget using Google Analytics.
_IG_Analytics("UA-793489-6", "/RPICrewScheduleG");
&lt;/script&gt;
&lt;style type="text/css"&gt;
div.exp{
padding: 0;
margin: 0;
}
div.loc{
margin-left: 19px;
}
&lt;/style&gt;
&lt;script type="text/javascript"&gt;
&lt;!--
/**
* Season info *
* 0 Fall: Aug 26 - Nov 1
* 1 Winter Training: Nov 2 - March 1
* 2 Spring: March 2 - May 25
* 3 Summer: May 26 - Aug 25
**/

/**
* Callback function for the GData json-in-script call
* Inserts the supplied list of events into a div of a pre-defined name
*
* @param {json} root is the JSON-formatted content from GData
*/
function processRaces(root) {
displayRaces(root.feed, 'races');
}

//meow
function displayRaces(feed, divId){
var now = new Date();
var season = getSeason(now);
var events = document.getElementById(divId);

//clear "Loading..."
if (events.childNodes.length &gt; 0){
events.removeChild(events.childNodes[0]);
}

//display season
var d = document.createElement('div');
d.appendChild(document.createTextNode(getSeasonText(season)));
events.appendChild(d);

//loop races
for (var i=0; i&lt;feed.entry.length; i++){
var entry = feed.entry[i];

var d = getDate(entry['gd$when'][0].startTime);
if(isCurrSeason(now, d)){
var title = entry.title.$t;
var desc = entry.content.$t;

//set up image and clicking to expand
var div = document.createElement('div');
div.className = 'exp';
var toggle = document.createElement('img');
toggle.src= 'http://timothy.broder.googlepages.com/p.jpg';
toggle.align = 'absmiddle';
toggle.id = i;
toggle.onclick = function() {toggleDiv(this); }
div.appendChild(toggle);
div.appendChild(document.createTextNode(' ' + d.getMonth() + "/" + d.getDay() + ' - '));

// get the href to link to the event
for(var j=0; j&lt;entry['link'].length; j++){
if (entry['link'][j]['type'] == 'text/html' &amp;&amp; entry['link'][j]['rel'] == 'alternate'){
var href = entry['link'][j]['href'];
}
}

//we can link to the cal
if (typeof href != 'undefined'){
var link = document.createElement('a');
link.href = href;
link.target = '_blank';
link.appendChild(document.createTextNode(title));
div.appendChild(link);
}
else{ //shouldn't get here but just in case
div.appendChild(document.createTextNode(title));
}

div.appendChild(document.createElement('br'));

events.appendChild(div);

var where = entry['gd$where'][0].valueString;
var tDiv = document.createElement('div'); //div that will be hidden initially
tDiv.id ='id' + i;
tDiv.style['display'] = 'none';
tDiv.className = 'loc';
events.appendChild(tDiv);

if(desc != null &amp;&amp; desc != ""){ //we have a desc (should be the teams we're competing against)
var dDiv = document.createElement('span');
dDiv.appendChild(document.createTextNode(desc + " "));
tDiv.appendChild(dDiv);
}
//the location field is populated (hidden at start)
if(where != null &amp;&amp; where != ""){ //we have a location
var it = document.createElement('i');
var map = document.createElement('a');
map.target = '_blank';
//link to location on google maps
map.href = 'http://maps.google.com/maps?f=q&amp;hl;=en&amp;&amp;q;=' + spaceLink(entry['gd$where'][0].valueString);
map.appendChild(document.createTextNode(entry['gd$where'][0].valueString));
it.appendChild(document.createTextNode(" ("));
it.appendChild(map);
it.appendChild(document.createTextNode(")"));
tDiv.appendChild(it);
}
}
}
}

//format the date a little
function getDate(when){
var data = when.split("-");
return new Date(data[0], data[1], data[2]);
}

//return int representation of season
function getSeason(d){
var month = d.getMonth();
var day = d.getDate();
var year = d.getFullYear();

var aug = new Date(year, 8, 25);
var nov = new Date(year, 11, 1);
var mar = new Date(year, 3, 1);
var may = new Date(year, 5, 25);

if(aug &lt; d &amp;&amp; d &lt;= nov) return 0; //fall
else if(mar &lt; d &amp;&amp; d &lt;= may) return 2; //spring
else if(may &lt; d &amp;&amp; d &lt;= aug) return 3; //summer
else return 1; //winter
}

//figure out the current season
function isCurrSeason(now, d){
currSeason = getSeason(now);
season = getSeason(d);

if(currSeason == season){ //same season yes
if(now.getFullYear() == d.getFullYear()){ //same year also, match
return true;
}
if(season == 1 &amp;&amp; (d.getFullYear() == now.getFullYear()-1)){ //diff year, prob winter
return true;
}
}
return false;
}

//return text for season
function getSeasonText(season){
if(season == 0) return "Fall Season";
if(season == 1) return "Winter Training";
if(season == 2) return "Spring Season";
if(season == 3) return "Summer Season";

return "no season"; //really shouldn't get here
}

//if the div is hidden show it, if not, hide it
function toggleDiv(where_id){
var div = document.getElementById('id' + where_id.id);
var img = document.getElementById(where_id.id);
if(div != null){
if(div.style.display != 'none'){
div.style.display = 'none';
img.src= 'http://timothy.broder.googlepages.com/p.jpg';

}
else{
div.style.display = 'block';
img.src= 'http://timothy.broder.googlepages.com/m.jpg';
}
}
}

//convert the location so it can be used in a link to google maps
function spaceLink(name){
return name.replace(' ', ',+');
}

//--&gt;
&lt;/script&gt;

&lt;div id="races"&gt;&lt;p&gt;Loading...&lt;/p&gt;&lt;/div&gt;
&lt;script type="text/javascript" src="http://www.google.com/calendar/feeds/rpicrew@gmail.com/public/full?alt=json-in-script&amp;callback;=processRaces&amp;orderby;=starttime&amp;singleevents;=true&amp;sortorder;=ascending&amp;start-min;=2007-01-01T00:00:00"&gt;&lt;/script&gt;




]]&gt;&lt;/Content&gt;
&lt;/Module&gt;
```
</code></pre>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/08/new-calendar-api-features.html">New Calendar API features</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-08-03T02:45:00+00:00" pubdate>
                      <span class='month'>Aug</span> <span class='day'>3rd</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/calendar">#calendar</a>
                        <a href="https://www.timbroder.com/blog/tags/gdata">#gdata</a>
                            </span>
                <span><a href="/2007/08/new-calendar-api-features.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/08/new-calendar-api-features.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="120787825"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p><a href="http://googledataapis.blogspot.com/2007/07/create-calendars-with-google-calendar.html">Google Calendar API</a> posts new read and write features. They
have added:</p>

<ul>
<li><a href="http://code.google.com/apis/calendar/developers_guide_protocol.html#ManagingCalendars">owncalendars</a>: contains the collection of calendars that a user 'owns'  </li>
<li><a href="http://code.google.com/apis/calendar/developers_guide_protocol.html#ManagingSubscriptions">allcalendars</a>: contains all the calendars that a user has access to  </li>
</ul>

<p>Useful for listing all your calendars if you manage a lot of them, or
changing their settings all at once (both features have read and write
capabilities)</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/07/domain.html">domain!</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-07-31T01:31:00+00:00" pubdate>
                      <span class='month'>Jul</span> <span class='day'>31st</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/gpowered.net">#gpowered.net</a>
                            </span>
                <span><a href="/2007/07/domain.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/07/domain.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="122051390"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>The design and domain have been set up (actually I finished it a week or so
ago but work's been keeping me pretty crazy). All my examples will be
implemented on <a href="http://gpowered.net/g/">gPowered.net</a> as well as a copy of
theses posts. Enjoy.</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/07/picasa-web-api-updates.html">Picasa Web Api updates</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-07-24T02:17:00+00:00" pubdate>
                      <span class='month'>Jul</span> <span class='day'>24th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/gdata">#gdata</a>
                        <a href="https://www.timbroder.com/blog/tags/picasa%20web">#picasa web</a>
                            </span>
                <span><a href="/2007/07/picasa-web-api-updates.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/07/picasa-web-api-updates.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="110486738"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p><a href="http://googledataapis.blogspot.com/2007/07/picasa-web-albums-adds-new-api-features.html">Google Data Api's</a> posted a few updates today, a few of which
I've really been looking forward to; Community Search, Retrieving a user's
recently uploaded photos, Retrieving recently added comments for a particular
user, Searching a user's photos, Filtering by tag, Uploading non-JPEG photos,
Downloading the original photo.</p>

<p>(my fav) <strong>Downloading the original photo</strong>: You can now download the original
photo, including all EXIF data. This is accomplished by retrieving the feed
with the <code>imgmax=d</code> query parameter and value This will return a feed where
the <code>media:content</code> elements reference the original downloadable image.</p>

<p>It's nice not having to use a <a href="http://groups.google.com/group/Google-Picasa-Data-API/browse_thread/thread/6311fb3da0673228/a165e494fe1c1d9d#a165e494fe1c1d9d">backdoor </a>
for this anymore</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/07/howto-post-code.html">HOWTO: post code</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-07-24T01:52:00+00:00" pubdate>
                      <span class='month'>Jul</span> <span class='day'>24th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                        <span><a href="/2007/07/howto-post-code.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/07/howto-post-code.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="109993607"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>Posting code is made quite easy by using
<a href="http://code.google.com/p/syntaxhighlighter/">SyntaxHighlighter</a>. It's pretty
easy to set up and works on any html sites, as well as
<a href="http://www.blogger.com">blogger</a> and <a href="http://www.wordpress.org">wordpress</a>.
I'll be using it heavily throughout these posts. 3 easy steps:</p>

<ol>
<li><p>Include the SyntaxHighlighter.css file at the top of your page.</p>

<pre><code data-language="html">&lt;link type="text/css" rel="stylesheet" href="/php/js/dp.SyntaxHighlighter/Styles/SyntaxHighlighter.css"&gt;&lt;/link&gt;
</code></pre></li>
<li><p>At the bottom of the page, include the
<a href="http://code.google.com/p/syntaxhighlighter/wiki/Brushes">brushes</a> and other
js files you will need, as well as the function call to stylize the
&lt;pre&gt; tags:</p>

<pre><code data-language="html">&lt;script language="javascript" src="/php/js/dp.SyntaxHighlighter/Scripts/shCore.js"&gt;&lt;/script&gt;
&lt;script language="javascript" src="/php/js/dp.SyntaxHighlighter/Scripts/shBrushCSharp.js"&gt;&lt;/script&gt;
&lt;script language="javascript" src="/php/js/dp.SyntaxHighlighter/Scripts/shBrushXml.js"&gt;&lt;/script&gt;
&lt;script language="javascript" src="/php/js/dp.SyntaxHighlighter/Scripts/shBrushPython.js"&gt;&lt;/script&gt;
&lt;script language="javascript"&gt;
dp.SyntaxHighlighter.ClipboardSwf = '/flash/clipboard.swf';
dp.SyntaxHighlighter.HighlightAll('code');
&lt;/script&gt;
</code></pre></li>
<li><p>Then, place the code you want in between these two steps using &lt;pre&gt;
tags that the javascript will stylize</p>

<pre><code data-language="html">&lt;pre name="code" class="html"&gt;
&lt;!-- code here --&gt;
&lt;/pre&gt;
&lt;pre name="code" class="python"&gt;
# code here
&lt;/pre&gt;
</code></pre></li>
</ol>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/07/howto-get-blogger-feeds-using-python.html">HOWTO: Displaying Blogger feeds with Python</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-07-19T03:07:00+00:00" pubdate>
                      <span class='month'>Jul</span> <span class='day'>19th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/blogger">#blogger</a>
                        <a href="https://www.timbroder.com/blog/tags/gdata">#gdata</a>
                        <a href="https://www.timbroder.com/blog/tags/HOWTO">#HOWTO</a>
                        <a href="https://www.timbroder.com/blog/tags/python">#python</a>
                            </span>
                <span><a href="/2007/07/howto-get-blogger-feeds-using-python.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/07/howto-get-blogger-feeds-using-python.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="111936092"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>This first HOWTO is going to cover how I did the basic structure of the posts section of gPowered: pulling from blogger. 
The main functions we'll need are to show a range of posts, a single post, and a function to get the total number of posts that are in the blog.
The reason I try to get the total number is so the different pages can be bookmarkable.  When retrieving a GData feed from blogger.  Entry 1 in the feed is going to be the newest post so there is no 'id' that is going to be static, so we'll do a little math to get a number we can later use as the id.
I use Django to handle rendering the python to the browser.  I probably won't get into other methods.</p>

<p>To start out you'll have to grab the following modules.</p>

<ul>
<li><p>the <a href="http://code.google.com/p/gdata-python-client/downloads/list">gdata python client</a></p></li>
<li><p><a href="http://effbot.org/zone/element-index.htm">ElementTree</a></p></li>
<li><p><a href="http://www.egenix.com/products/python/mxBase/mxDateTime/">mxDateTime</a> (I used this for date formatting)</p></li>
</ul>

<p>We then import the parts the we'll need (you can ignore the Django part for your own methods):</p>

<pre><code data-language="python">    from Django.shortcuts import render_to_response

    from gdata import service
    import gdata
    import atom
    import getopt
    import sys

    from mx import DateTime
</code></pre>

<p>One of the first things we're going to have to do is authenticate with google services.
There are two ways to do this: <a href="http://code.google.com/apis/blogger/developers_guide_python.html#auth_sub">AuthSub proxy authentication</a> which has a user login using their own credentials, and
 <a href="http://code.google.com/apis/blogger/developers_guide_python.html#client_login"> ClientLogin username/password authentication</a> where you send a username and password.  We will be using ClientLogin.
 First off, set your login credentials to use later.</p>

<pre><code data-language="python">    #login info
    user = 'timothy.broder@gmail.com'
    password = '********'
</code></pre>

<p>Then we start setting up our call to the service.</p>

<pre><code data-language="python">    #set up service
    blogger_service = service.GDataService(user, password)
    blogger_service.source = 'gpowered'
    blogger_service.service = 'blogger'
    blogger_service.server = 'www.blogger.com'
    blogger_service.ProgrammaticLogin()
</code></pre>

<p>For more info see the <a href="http://code.google.com/apis/blogger/developers_guide_python.html">blogger developer's guide with python</a> or the <a href="http://code.google.com/apis/accounts/Authentication.html">Google Account Authentication documentation</a></p>

<p>After we have authenticated with Google we need to start building up our query to <a href="http://code.google.com/apis/gdata/">GData</a>, which will return as an ElementTree of data.  The first thing you'll need is your blog's id.</p>

<p>You can use the function in the dev guide to help you with this if you don't already know it.</p>

<pre><code data-language="python">    def PrintUserBlogTitles(blogger_service):
      query = service.Query()
      query.feed = '/feeds/default/blogs'
      feed = blogger_service.Get(query.ToUri())

      print feed.title.text
      for entry in feed.entry:
        print "\t" + entry.title.text
</code></pre>

<p>After you have the blog id we can start working on the query</p>

<pre><code data-language="python">    blog_id = 413573351281770670
    feed_url = '/feeds/%s/posts/default' % str(blog_id)
    query = service.Query()
    query.feed = feed_url
</code></pre>

<p>The below function returns the total number of posts that are in the feed.  We can get a small response by sending 0 for the max results.  Below is the function and the small response we get from it.</p>

<pre><code data-language="python">    #get the total number of posts for this feed
    def get_total(query):
     #query for no posts
     query.max_results = '0'
     query.start_index = '1'

     #get back entryless feed
     feed = blogger_service.Get(query.ToUri()) 
     return int(feed.total_results.text)
</code></pre>

<pre><code data-language="xml">    &lt;ns0:feed xmlns:ns0="http://www.w3.org/2005/Atom"&gt;
     &lt;ns1:totalresults xmlns:ns1="http://a9.com/-/spec/opensearchrss/1.0/"&gt;1&lt;/ns1:totalresults&gt;
     &lt;ns1:itemsperpage xmlns:ns1="http://a9.com/-/spec/opensearchrss/1.0/"&gt;0&lt;/ns1:itemsperpage&gt;
     &lt;ns1:startindex xmlns:ns1="http://a9.com/-/spec/opensearchrss/1.0/"&gt;1&lt;/ns1:startindex&gt;
     &lt;ns0:generator version="7.00" uri="http://www.blogger.com"&gt;Blogger&lt;/ns0:generator&gt;
     &lt;ns0:author&gt;&lt;ns0:name&gt;Tim&lt;/ns0:name&gt;&lt;/ns0:author&gt;
     &lt;ns0:id&gt;tag:blogger.com,1999:blog-413573351281770670&lt;/ns0:id&gt;
     &lt;ns0:link href="http://gpowered.blogspot.com/" type="text/html" rel="alternate"&gt;&lt;/ns0:link&gt;
     &lt;ns0:link href="http://gpowered.blogspot.com/feeds/posts/default" type="application/atom+xml" rel="http://schemas.google.com/g/2005#feed"&gt;&lt;/ns0:link&gt;
     &lt;ns0:link href="http://www.blogger.com/feeds/413573351281770670/posts/default?max-results=0" type="application/atom+xml" rel="self"&gt;&lt;/ns0:link&gt;
     &lt;ns0:link href="http://www.blogger.com/feeds/413573351281770670/posts/default" type="application/atom+xml" rel="http://schemas.google.com/g/2005#post"&gt;&lt;/ns0:link&gt;
     &lt;ns0:title type="text"&gt;gPowered&lt;/ns0:title&gt;
     &lt;ns0:updated&gt;2007-07-18T10:55:06.728-05:00&lt;/ns0:updated&gt;
    &lt;/ns0:feed&gt;
</code></pre>

<p>So we get the total number of posts and then we can start pulling data.  Lets make a generic function, PostFrom, that can be used to show multiple posts, or just single ones, depending on what you pass to it.  The start number that is passed to PostFrom has been set to the first post in the blog is considered to have an id of 1 and the latest post is the same as total_posts.  This is useful so if viewers want to bookmark the page they are looking at, the post that is being displayed will not change.
The following are the different functions that will make use of it.</p>

<pre><code data-language="python">    #show latest posts
    def Posts(request):
     return ListPosts(request, total_posts)

    #show posts starting from a certain point 
    def ListPosts(request, start):
     start = total_posts - int(start) + 1
     return PostFrom(request, start, show_num)

    #show a single post
    def Post(request, start):
     start = total_posts - int(start) + 1
     return PostFrom(request, start, 1)

    def PostFrom(request, start, count):
     #query for count number of posts starting at the given post
     query.max_results = str(count)
     query.start_index = str(start)
     feed = blogger_service.Get(query.ToUri())
</code></pre>

<p>Now we have all the data we need in the feed variable.  Its been turned into an element tree so we don't have to worry about XML parsing here.  Every node has become an objects and lists.  Objects for single nodes(title), and lists for where there are multiple nodes of the same name (entry, link)
At this stage I play with the data a little so it's easier to use in my Django template.</p>

<pre><code data-language="python">     #normalize data for output
     for entry in feed.entry:
      #get link for template
      entry.my_link = entry.link[0].href

      #id for links
      entry.my_id = curr_id
      curr_id -= 1

      #format published date
      dt = DateTime.ISO.ParseDateTimeUTC(entry.published.text)
      entry.my_date = dt.strftime('%m/%d/%Y')
      entry.my_time = dt.strftime('%I:%M %p') 
</code></pre>

<p>Of course we're going to need next and previous buttons as well.  The way we've set up the math with total_posts and the start number, we only have to increment or decrement these by count (the number of posts to display on a page).  I also set part of the link, as well as the page title, that I will use in my template.</p>

<pre><code data-language="python">     prev = total_posts - (start - count) + 1
     if prev &gt; total_posts:
      prev = None


     next = total_posts - (start + count) + 1
     if next &lt; 1:
      next = None

     #showing single post 
     if count == 1:
      link = 'post'
      title = feed.entry[0].title.text
     #listing posts
     else:
      link = 'posts'
      title = 'home'
</code></pre>

<p>The final part of the function is a return to the Django framework to populate my template.  I'm going to get into the template more in the next post, but you now have all the information you need stored.</p>

<pre><code data-language="python">     return render_to_response('posts/index.html', {
      'entries': feed.entry,
      'title': title,
      'tag_link': tag_link, 
      'prev': prev,
      'next': next,  
      'link': link,
      'tab_home': True,
      })
</code></pre>

<p>To the template!</p>

<p>The first part consists of displaying the post itself, along with its relevant information</p>

<pre><code data-language="html">    
{% for entry in entries %}

      &lt;h2&gt;&lt;a href="/post/{{ entry.my_id }}"&gt;{{ entry.title.text }}&lt;/h2&gt;&lt;/a&gt;
      {{ entry.content.text }}
      &lt;p&gt;Posted by {% for auth in entry.author %}{{ auth.name.text }}{% if not forloop.last %}, {% endif %}{% endfor %} 
      on {{ entry.my_date }} at {{ entry.my_time }}&lt;/p&gt;
      {% if entry.category %}&lt;p&gt;Labels: {% for cat in entry.category %}
       &lt;a href="{{ tag_link }}{{ cat.term }}"&gt;{{ cat.term }}&lt;/a&gt;
       {% if not forloop.last %}, {% endif %}
       {% endfor %}&lt;/p&gt;{% endif %}&lt;p&gt;&lt;a href="{{ entry.my_link }}"&gt;More...&lt;/a&gt;&lt;/p&gt;

    {% endfor %}
    
</code></pre>

<p>And the second part handles the prev and next links</p>

<pre><code data-language="html">    
    &lt;br&gt;&lt;/br&gt;
    &lt;div class="nav"&gt;
    {% if prev %}
    &lt;a href="/{{ link }}/{{ prev }}"&gt;prev&lt;/a&gt;
    {% else %}

    {% endif %}

    {% if next %}
    &lt;a href="/{{ link }}/{{ next }}"&gt;next&lt;/a&gt;
    {% else %}

    {% endif %}
    &lt;/div&gt;
    {% include 'bottom.html' %}
    
</code></pre>

<p>That's all for now. A working example is the <a href="http://gpowered.net/g/">gPowered.net</a> site I'm putting up.  All posts on there are getting pulled from this blog.  I'm going to get into tags and comments next time, as well as javascript and php versions. Stay tuned!</p>
</section>


</article>
<article class="post" role="article">
    
<header class="post-header">
    <h1 class="post-title"><a href="https://www.timbroder.com/2007/07/begining.html">A begining</a></h1>
    <section class="post-meta">
      <time class="post-date" datetime="2007-07-15T18:33:00+00:00" pubdate>
                      <span class='month'>Jul</span> <span class='day'>15th</span> <span class='year'>2007</span>
                </time>

                    <span class="poop2"> in
                        <a href="https://www.timbroder.com/blog/categories/Code">Code</a>                            </span>
                            <span class="poop2">
                        <a href="https://www.timbroder.com/blog/tags/gpowered.net">#gpowered.net</a>
                            </span>
                <span><a href="/2007/07/begining.html" class="poop" style="color:#4A4A4A">๏</a></span>
        <div class="comment-count">
            <a href="https://www.timbroder.com/2007/07/begining.html#disqus_thread" class="disqus-comment-count"
                                    data-disqus-identifier="112578565"
                            ></a>
        </div>
    </section>

  </header>

  <section class="post-content"><p>I've been meaning to start this project for a while now so here it goes...</p>

<p>Part of my daily routine is reading a couple of comics including <a href="http://www.gocomics.com/calvinandhobbes/">Calvin and
Hobbes</a>,
<a href="http://www.dilbert.com/comics/dilbert/archive/">Dilbert</a>,
<a href="http://www.gocomics.com/foxtrotclassics/">Foxtrot</a>,
<a href="http://www.gocomics.com/garfield/">Garfield</a>, <a href="http://xkcd.com/">xkcd</a>,
<a href="http://www.vgcats.com/comics/">vgcats</a>, and <a href="http://www.oreillynet.com/wateringhole/blog/">The Watering
Hole</a>. Following the quick comic
catch up I'll look through some various project blogs including
<a href="http://www.ampache.org/">Ampache</a>, <a href="http://www.djangoproject.com/">django</a>,
<a href="http://developer.yahoo.com/yui/">YUI</a>, and
<a href="http://developers.facebook.com/">facebook</a>. But the highlight of my reading
has always been what Google is up to. On this front my favorite blogs have
been <a href="http://googlesystem.blogspot.com/">Google Operating System</a>,
<a href="http://googlified.com/">Googlefied</a>, and <a href="http://blogoscoped.com/">Google
Blogoscoped</a>. They keep me up to date on what Google
is doing technically and in the business world. When new api's come out I try
to take a look at their documentation and see what they can do. I'll also scan
over Google's official blogs to see if I've missed anything for the day.</p>

<p>So I guess now I have to get to the point of this project. With a little
inspiration from <a href="http://www.cangooglehearme.com">CanGoogleHearMe?</a> I envision
a website, starting out as a personal homepage, that is entirely powered by
Google; All the data stored somehow in a Google service. I'm going to
chronicle my journey of creating news, updates, photos, links, a profile, and
anything else you would want to see in a personal page, all Google powered.
Then later I also want to extend the tutorials to integrating Google with the
Facebook platform. The languages I hope to cover are python, JavaScript, and
PHP. I would also like to touch on Java if I can.</p>

<p>I also will post some updates from Google themselves, but seeing that there
are already popular sites that do that, those updates won't be the focal point
of this blog. Without further adieu, let the tutorials commence!</p>

<p>Edit: <a href="http://gpowered.net">Domain is live!</a></p>
</section>


</article>
<nav>
    <a href="https://www.timbroder.com/blog/categories/34">Newer Posts</a><br />
    <br />
</nav>

    </main>


                        <footer class="site-footer clearfix">
    <section>
            <span class="tag size2"><a href="/blog/tags/"></a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/AVSpeechSynthesizer">AVSpeechSynthesizer</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Ai">Ai</a></span>
            &nbsp;
        <span class="tag size8"><a href="/blog/tags/Android">Android</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Atom">Atom</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Avengers">Avengers</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman">Batman</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman%20Inc.">Batman Inc.</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Batman%20and%20Robin">Batman and Robin</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/CKEditor">CKEditor</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Calibre">Calibre</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Cheese">Cheese</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ComicCon">ComicCon</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/CoreData">CoreData</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/DRM">DRM</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/Docs%20Spreadsheets">Docs Spreadsheets</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ESI">ESI</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Fontis">Fontis</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/GME">GME</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/GTD">GTD</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/GWT">GWT</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Garlic">Garlic</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Google">Google</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Google%20Reader">Google Reader</a></span>
            &nbsp;
        <span class="tag size9"><a href="/blog/tags/HOWTO">HOWTO</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Hulu">Hulu</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Internet%20Explorer">Internet Explorer</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/JIRA">JIRA</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/Kindle">Kindle</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/Mashups">Mashups</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Memcached">Memcached</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/OmniFocus">OmniFocus</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Oracle">Oracle</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/PHPUnit">PHPUnit</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/PostgreSQL">PostgreSQL</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/RSS">RSS</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Redmine">Redmine</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Remember%20the%20Milk">Remember the Milk</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Ruby">Ruby</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/SQL">SQL</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Shared%20web%20hosting%20service">Shared web hosting service</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Siri">Siri</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Skype">Skype</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Sony%20Reader">Sony Reader</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Stan%20Lee">Stan Lee</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/TDD">TDD</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Terminator">Terminator</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/TinyMCE">TinyMCE</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Vibrams">Vibrams</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Virtual%20hosting">Virtual hosting</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Virtual%20private%20server">Virtual private server</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Walking%20Dead">Walking Dead</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Web%20hosting">Web hosting</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/YUI">YUI</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/Zend">Zend</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/adwhirl">adwhirl</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/adwords">adwords</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/aiaio">aiaio</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/ajax">ajax</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/alfred">alfred</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/analytics">analytics</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/angularjs">angularjs</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/appengine">appengine</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/apple">apple</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/applepay">applepay</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/apps">apps</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/autocomplete">autocomplete</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/automation">automation</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/beta">beta</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/bit.ly">bit.ly</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/blackberry">blackberry</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/blogger">blogger</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/bookmarks">bookmarks</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/brightkite">brightkite</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/calendar">calendar</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/chrome">chrome</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/coffee">coffee</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/css">css</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/debug">debug</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/digg">digg</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/django">django</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/drafts">drafts</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/dropbox">dropbox</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/encryption">encryption</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/engagement">engagement</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/events">events</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/facebook">facebook</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/firefox">firefox</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/friendfeed">friendfeed</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/gadgets">gadgets</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/gchat">gchat</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/gdata">gdata</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/gdrive">gdrive</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/gears">gears</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/git">git</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/github">github</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/gmail">gmail</a></span>
            &nbsp;
        <span class="tag size5"><a href="/blog/tags/gpowered.net">gpowered.net</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/greasemonkey">greasemonkey</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/groups">groups</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/homebrew">homebrew</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/instapaper">instapaper</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/interfacebuilder">interfacebuilder</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/ios">ios</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/ipad">ipad</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/iphone">iphone</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/javascript">javascript</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/jira">jira</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/jquery">jquery</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/json">json</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/kids">kids</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/laravel">laravel</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/launch%20center%20pro">launch center pro</a></span>
            &nbsp;
        <span class="tag size5"><a href="/blog/tags/magento">magento</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/maps">maps</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mercurial">mercurial</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mock">mock</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/mongodb">mongodb</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/music">music</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/mysql">mysql</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/netbook">netbook</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/nosql">nosql</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/objective%20c">objective c</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/oil">oil</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/omnifocus">omnifocus</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/opensocial">opensocial</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/opensource">opensource</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/os">os</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/osx">osx</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/pesto">pesto</a></span>
            &nbsp;
        <span class="tag size7"><a href="/blog/tags/php">php</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/picasa%20web">picasa web</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/podcasts">podcasts</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/powershell">powershell</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/primal">primal</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/productivity">productivity</a></span>
            &nbsp;
        <span class="tag size6"><a href="/blog/tags/python">python</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/pythonista">pythonista</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/quick">quick</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/reader">reader</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/realm">realm</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/regex">regex</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/running">running</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/search">search</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/security">security</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/seo">seo</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/sketch">sketch</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/skynet">skynet</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/sleep">sleep</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/socialgraph">socialgraph</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/solr">solr</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/startup">startup</a></span>
            &nbsp;
        <span class="tag size4"><a href="/blog/tags/swift">swift</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/testing">testing</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/textmate">textmate</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/timbroder.com">timbroder.com</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/todoist">todoist</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/twitter">twitter</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/twitter2gTalk">twitter2gTalk</a></span>
            &nbsp;
        <span class="tag size6"><a href="/blog/tags/ubuntu">ubuntu</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/urls">urls</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/vagrant">vagrant</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/varnish">varnish</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/virtualenv">virtualenv</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/winamp">winamp</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/windows">windows</a></span>
            &nbsp;
        <span class="tag size3"><a href="/blog/tags/wordpress">wordpress</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/xbox">xbox</a></span>
            &nbsp;
        <span class="tag size2"><a href="/blog/tags/xcode">xcode</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/xml">xml</a></span>
            &nbsp;
        <span class="tag size1"><a href="/blog/tags/yahoo%20pipes">yahoo pipes</a></span>
            &nbsp;
        <span class="tag size0"><a href="/blog/tags/youtube">youtube</a></span>
            &nbsp;
    
    </section>
    <section class="copyright">
        Copyright &copy; 2007-2018 -
         Tim Broder -         <span class="credit">Powered by <a href="http://sculpin.io">Sculpin</a></span>
    </section>
</footer>
                <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/index.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/rainbow.min.js"></script>
<script type="text/javascript" src="https://www.timbroder.com/themes/broderboy/deadfish/assets/js/rlns.min.js"></script>

<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'timbrodercom'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script>

<script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-17099661-1', 'auto');
    ga('send', 'pageview');

</script>    </div>
</body>
</html>
