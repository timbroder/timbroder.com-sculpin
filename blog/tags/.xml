<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[timbroder.com]]></title>
    <link href="https://www.timbroder.com/blog/tags/.xml" rel="self"/>
    <link href="https://www.timbroder.com/"/>
    <updated>2018-09-09T12:21:33+00:00</updated>
    <id>https://www.timbroder.com/</id>
            <author>
            <name><![CDATA[Tim Broder]]></name>            <email><![CDATA[timothy.broder@gmail.com]]></email>        </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Adding Smart Speed to any audio file with Audacity]]></title>
            <link href="https://www.timbroder.com/2017/01/Adding-SmartSpeed-to-any-audio-file.html"/>
            <updated>2017-01-15T09:18:00+00:00</updated>
            <id>https://www.timbroder.com/2017/01/Adding-SmartSpeed-to-any-audio-file.html</id>
            <content type="html"><![CDATA[<p>The <a href="https://geo.itunes.apple.com/us/app/overcast-podcast-player/id888422857?at=11laRZ&amp;ct=afp15&amp;ls=1&amp;mt=8" title="Overcast">Overcast</a> podcast app by <a href="https://twitter.com/marcoarment" title="Marco Arment">Marco Arment</a> has a killer feature called Smart Speed and it has ruined all audio listening for me outside of the app. Smart Speed <em>dynamically shortens silences in talk shows</em>; it saves you time, and makes them feel tighter and more produced. I wish I had it everywhere.</p>

<p><a href="http://tekside.net/" title="Tekside">Tekside</a> is a podcast network I'm part of, and while some of our shows are heavily edited, many are not. While doing some audio work for <a href="http://heymamapodcast.com/" title="something else">something else</a>, my <a href="https://twitter.com/bingopajamas" title="wife">wife</a> noticed that <a href="http://www.audacityteam.org/" title="Audacity">Audacity</a> (cross platform) has a crud version of this type of audio processing. Here's how to set it up.</p>

<h2 id="setup">Setup</h2>

<ol>
<li><a href="http://www.audacityteam.org/download/" title="Download Audacity">Download Audacity</a> &amp; install it. But don't run it yet. (If it opened as part of install, close it)</li>
<li>If you are working with audio files already, head to "Making it work". If you are pulling in .mov files from <a href="http://www.ecamm.com/mac/callrecorder/" title="Skype Call Recorder">Skype Call Recorder</a> see step 3</li>
<li>Install FFMPEG: If you are on a Mac, download and install <a href="http://lame3.buanzo.com.ar/FFmpeg_v0.6.2_for_Audacity_on_OSX.dmg" title="this">this</a> Otherwise, see <a href="http://manual.audacityteam.org/man/faq_installation_and_plug_ins.html#ffdown" title="these instructions">these instructions</a></li>
</ol>

<h2 id="making-it-work">Making it work</h2>

<ol>
<li>Open Audacity</li>
<li>Click File -> Import Audio</li>
<li>Choose your audio recording</li>
<li>Optional: If Audacity prompts you to "Select Stream(s) to import", select all of them and hit OK <img src="https://c1.staticflickr.com/6/5567/32174620192_8f027bbbef_b.jpg" alt="" /></li>
<li>Select one of the audio streams and hit CMD+A to highlight all of the audio</li>
<li>Click Effect -> Truncate Silence</li>
<li>I currently have <strong>duration</strong> set to <strong>0.9</strong> and <strong>truncate to</strong> set to <strong>0.5</strong>. What this does is find any silence longer that 0.9 seconds and shorten it to 0.5 seconds <img src="https://c1.staticflickr.com/1/281/32174511182_ee8cfc68db_b.jpg" alt="" /></li>
<li>Hit ok &amp; let it run</li>
<li>File -> Export <em>(As a WAV. You may have to hit OK a few times)</em></li>
<li>Done!</li>
</ol>

<p>I'm still figuring out which duration will work best for which shows. It depends how fast the people on it already naturally talk and flow which each other. For <a href="http://tekside.net/showandtell/" title="Show and Tell">Show and Tell</a>, our movie podcast, the above settings strip a 55 min recording to 48 mins and it sounds a lot tighter.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Adding Smart Speed to any audio file with Audacity]]></title>
            <link href="https://www.timbroder.com/2017/01/Adding-SmartSpeed-to-any-audio-file.html"/>
            <updated>2017-01-15T09:18:00+00:00</updated>
            <id>https://www.timbroder.com/2017/01/Adding-SmartSpeed-to-any-audio-file.html</id>
            <content type="html"><![CDATA[<p>The <a href="https://geo.itunes.apple.com/us/app/overcast-podcast-player/id888422857?at=11laRZ&amp;ct=afp15&amp;ls=1&amp;mt=8" title="Overcast">Overcast</a> podcast app by <a href="https://twitter.com/marcoarment" title="Marco Arment">Marco Arment</a> has a killer feature called Smart Speed and it has ruined all audio listening for me outside of the app. Smart Speed <em>dynamically shortens silences in talk shows</em>; it saves you time, and makes them feel tighter and more produced. I wish I had it everywhere.</p>

<p><a href="http://tekside.net/" title="Tekside">Tekside</a> is a podcast network I'm part of, and while some of our shows are heavily edited, many are not. While doing some audio work for <a href="http://heymamapodcast.com/" title="something else">something else</a>, my <a href="https://twitter.com/bingopajamas" title="wife">wife</a> noticed that <a href="http://www.audacityteam.org/" title="Audacity">Audacity</a> (cross platform) has a crud version of this type of audio processing. Here's how to set it up.</p>

<h2 id="setup">Setup</h2>

<ol>
<li><a href="http://www.audacityteam.org/download/" title="Download Audacity">Download Audacity</a> &amp; install it. But don't run it yet. (If it opened as part of install, close it)</li>
<li>If you are working with audio files already, head to "Making it work". If you are pulling in .mov files from <a href="http://www.ecamm.com/mac/callrecorder/" title="Skype Call Recorder">Skype Call Recorder</a> see step 3</li>
<li>Install FFMPEG: If you are on a Mac, download and install <a href="http://lame3.buanzo.com.ar/FFmpeg_v0.6.2_for_Audacity_on_OSX.dmg" title="this">this</a> Otherwise, see <a href="http://manual.audacityteam.org/man/faq_installation_and_plug_ins.html#ffdown" title="these instructions">these instructions</a></li>
</ol>

<h2 id="making-it-work">Making it work</h2>

<ol>
<li>Open Audacity</li>
<li>Click File -> Import Audio</li>
<li>Choose your audio recording</li>
<li>Optional: If Audacity prompts you to "Select Stream(s) to import", select all of them and hit OK <img src="https://c1.staticflickr.com/6/5567/32174620192_8f027bbbef_b.jpg" alt="" /></li>
<li>Select one of the audio streams and hit CMD+A to highlight all of the audio</li>
<li>Click Effect -> Truncate Silence</li>
<li>I currently have <strong>duration</strong> set to <strong>0.9</strong> and <strong>truncate to</strong> set to <strong>0.5</strong>. What this does is find any silence longer that 0.9 seconds and shorten it to 0.5 seconds <img src="https://c1.staticflickr.com/1/281/32174511182_ee8cfc68db_b.jpg" alt="" /></li>
<li>Hit ok &amp; let it run</li>
<li>File -> Export <em>(As a WAV. You may have to hit OK a few times)</em></li>
<li>Done!</li>
</ol>

<p>I'm still figuring out which duration will work best for which shows. It depends how fast the people on it already naturally talk and flow which each other. For <a href="http://tekside.net/showandtell/" title="Show and Tell">Show and Tell</a>, our movie podcast, the above settings strip a 55 min recording to 48 mins and it sounds a lot tighter.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Opening iTerm2 Tabs at Specific Directories]]></title>
            <link href="https://www.timbroder.com/2016/07/Opening-iTerm2-Tabs-at-Specific-Directories.html"/>
            <updated>2016-07-21T10:22:00+00:00</updated>
            <id>https://www.timbroder.com/2016/07/Opening-iTerm2-Tabs-at-Specific-Directories.html</id>
            <content type="html"><![CDATA[<p>I love iTerm2. I can customize the stock Terminal.app just about as much, but it's much easier in iTerm. I find myself always opening the same 3 or 4 tabs when I get into coding mode. Luckily iTerm2 has <strong>great</strong> <a href="https://www.iterm2.com/documentation-scripting.html" title="scripting support">scripting support</a></p>

<p>The 4 tabs I always open for <a href="http://www.kidfund.us/" title="Kidfund">Kidfund</a> are:</p>

<ol>
<li>Our iOS project</li>
<li>Our Laravel project. Usually where I run artisan commands</li>
<li>Our Laravel project; Tails most recent file in the log directory</li>
<li>Our Laravel project; I jump around from here. Usually CD-ing to 1. the realm directory to pop it into <a href="https://github.com/realm/realm-browser-osx" title="Realm Browser">Realm Browser</a></li>
</ol>

<p>I didn't want this to run <em>all</em> of the time so I didn't have this script run each time iTerm opens. I instead wired it into an Alfred command. If you are interested you can download that <a href="https://github.com/Kidfund/KidTabs" title="here">here</a></p>

<p>The underlying script is as follows. It's crud, and could definitely be more flexible, but it works for me at the moment. Hopefully it can help you craft something to your needs</p>

<pre><code data-language="applescript">tell application "iTerm2"
  tell current session of current window
    write text "cd ~/workspace/kidfund/ios"
  end tell
  tell current window
    create tab with default profile
      tell current session of current tab
        write text "cd ~/workspace/kidfund/web"
      end tell
  end tell
    tell current window
    create tab with default profile
      tell current session of current tab
        write text "cd ~/workspace/kidfund/web &amp;&amp; tail -f storage/logs/\"$(ls -at storage/logs | head -n 1)\""
      end tell
  end tell
    tell current window
    create tab with default profile
      tell current session of current tab
        write text "cd ~/workspace/kidfund/web"
      end tell
  end tell
end tell
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Opening iTerm2 Tabs at Specific Directories]]></title>
            <link href="https://www.timbroder.com/2016/07/Opening-iTerm2-Tabs-at-Specific-Directories.html"/>
            <updated>2016-07-21T10:22:00+00:00</updated>
            <id>https://www.timbroder.com/2016/07/Opening-iTerm2-Tabs-at-Specific-Directories.html</id>
            <content type="html"><![CDATA[<p>I love iTerm2. I can customize the stock Terminal.app just about as much, but it's much easier in iTerm. I find myself always opening the same 3 or 4 tabs when I get into coding mode. Luckily iTerm2 has <strong>great</strong> <a href="https://www.iterm2.com/documentation-scripting.html" title="scripting support">scripting support</a></p>

<p>The 4 tabs I always open for <a href="http://www.kidfund.us/" title="Kidfund">Kidfund</a> are:</p>

<ol>
<li>Our iOS project</li>
<li>Our Laravel project. Usually where I run artisan commands</li>
<li>Our Laravel project; Tails most recent file in the log directory</li>
<li>Our Laravel project; I jump around from here. Usually CD-ing to 1. the realm directory to pop it into <a href="https://github.com/realm/realm-browser-osx" title="Realm Browser">Realm Browser</a></li>
</ol>

<p>I didn't want this to run <em>all</em> of the time so I didn't have this script run each time iTerm opens. I instead wired it into an Alfred command. If you are interested you can download that <a href="https://github.com/Kidfund/KidTabs" title="here">here</a></p>

<p>The underlying script is as follows. It's crud, and could definitely be more flexible, but it works for me at the moment. Hopefully it can help you craft something to your needs</p>

<pre><code data-language="applescript">tell application "iTerm2"
  tell current session of current window
    write text "cd ~/workspace/kidfund/ios"
  end tell
  tell current window
    create tab with default profile
      tell current session of current tab
        write text "cd ~/workspace/kidfund/web"
      end tell
  end tell
    tell current window
    create tab with default profile
      tell current session of current tab
        write text "cd ~/workspace/kidfund/web &amp;&amp; tail -f storage/logs/\"$(ls -at storage/logs | head -n 1)\""
      end tell
  end tell
    tell current window
    create tab with default profile
      tell current session of current tab
        write text "cd ~/workspace/kidfund/web"
      end tell
  end tell
end tell
</code></pre>
]]></content>
        </entry>
    </feed>