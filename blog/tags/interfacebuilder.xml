<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[timbroder.com]]></title>
    <link href="https://www.timbroder.com/blog/tags/interfacebuilder.xml" rel="self"/>
    <link href="https://www.timbroder.com/"/>
    <updated>2018-09-09T12:21:33+00:00</updated>
    <id>https://www.timbroder.com/</id>
            <author>
            <name><![CDATA[Tim Broder]]></name>            <email><![CDATA[timothy.broder@gmail.com]]></email>        </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Dismiss a Modal UIViewController created in Interface Builder]]></title>
            <link href="https://www.timbroder.com/2014/07/dismiss-a-modal-uiviewcontroller-created-in-interface-builder.html"/>
            <updated>2014-07-27T22:31:11+00:00</updated>
            <id>https://www.timbroder.com/2014/07/dismiss-a-modal-uiviewcontroller-created-in-interface-builder.html</id>
            <content type="html"><![CDATA[<p>There are a <a href="http://stackoverflow.com/questions/2796438/uibarbuttonitem-target-action-not-working">number</a> of posts on this
<a href="http://stackoverflow.com/questions/7719237/add-a-custom-selector-to-a-uibarbuttonitem">subject</a> on Stack. They involve re-instantiating (this seems
slower to me) or yanking the view from a UIButton (this feels dirty).</p>

<p>I’d rather just update the UIBarButtonItem that I already have:</p>

<p><a href="https://www.flickr.com/photos/timothybroder/14575059147" title="View
'2014-07-27_1826' on Flickr.com"><img src="https://farm6.staticflickr.com/5566/14575059147_d33d111203_b.jpg" alt="2014-07-27_1826" /></a></p>

<p>All I needed to do, was attach the appropriate target and action to the
UIBarButtonItem:</p>

<pre><code data-language="swift">class SettingsTableViewController : UITableViewController {

    @IBOutlet weak var doneBarButton: UIBarButtonItem!

    init(coder aDecoder: NSCoder!) {
        super.init(coder: aDecoder)
    }

    override func viewDidLoad() {
        super.viewDidLoad()

        doneBarButton.target = self
        doneBarButton.action = "donePressed:"
    }

    @IBAction func donePressed(b:UIBarButtonItem) {
        self.dismissViewControllerAnimated(true, completion: {})
    }
}
</code></pre>
]]></content>
        </entry>
    </feed>